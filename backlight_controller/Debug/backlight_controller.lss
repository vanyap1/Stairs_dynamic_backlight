
backlight_controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011e  00800100  000015a6  0000163a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000015a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000009d  0080021e  0080021e  00001758  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001758  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000017b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  000017f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026e4  00000000  00000000  00001a34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000120b  00000000  00000000  00004118  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001444  00000000  00000000  00005323  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000588  00000000  00000000  00006768  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b28  00000000  00000000  00006cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000160f  00000000  00000000  00007818  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  00008e27  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
       4:	0c 94 51 05 	jmp	0xaa2	; 0xaa2 <__vector_1>
       8:	0c 94 60 05 	jmp	0xac0	; 0xac0 <__vector_2>
       c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      48:	0c 94 b5 04 	jmp	0x96a	; 0x96a <__vector_18>
      4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      50:	0c 94 ec 04 	jmp	0x9d8	; 0x9d8 <__vector_20>
      54:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_21>
      58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a0:	0c 94 78 03 	jmp	0x6f0	; 0x6f0 <__vector_40>
      a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
      b4:	11 24       	eor	r1, r1
      b6:	1f be       	out	0x3f, r1	; 63
      b8:	cf ef       	ldi	r28, 0xFF	; 255
      ba:	d8 e0       	ldi	r29, 0x08	; 8
      bc:	de bf       	out	0x3e, r29	; 62
      be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
      c0:	12 e0       	ldi	r17, 0x02	; 2
      c2:	a0 e0       	ldi	r26, 0x00	; 0
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	e6 ea       	ldi	r30, 0xA6	; 166
      c8:	f5 e1       	ldi	r31, 0x15	; 21
      ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
      cc:	05 90       	lpm	r0, Z+
      ce:	0d 92       	st	X+, r0
      d0:	ae 31       	cpi	r26, 0x1E	; 30
      d2:	b1 07       	cpc	r27, r17
      d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
      d6:	22 e0       	ldi	r18, 0x02	; 2
      d8:	ae e1       	ldi	r26, 0x1E	; 30
      da:	b2 e0       	ldi	r27, 0x02	; 2
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
      de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
      e0:	ab 3b       	cpi	r26, 0xBB	; 187
      e2:	b2 07       	cpc	r27, r18
      e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
      e6:	0e 94 6f 05 	call	0xade	; 0xade <main>
      ea:	0c 94 d1 0a 	jmp	0x15a2	; 0x15a2 <_exit>

000000ee <__bad_interrupt>:
      ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <__vector_21>:

uint16_t get_adc(uint8_t source){
	adc_pin_select(source);
	//uint16_t adc_tmp_data = adc_convert();
	return adc_convert();
}
      f2:	1f 92       	push	r1
      f4:	0f 92       	push	r0
      f6:	0f b6       	in	r0, 0x3f	; 63
      f8:	0f 92       	push	r0
      fa:	11 24       	eor	r1, r1
      fc:	8f 93       	push	r24
      fe:	81 e0       	ldi	r24, 0x01	; 1
     100:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     104:	8f 91       	pop	r24
     106:	0f 90       	pop	r0
     108:	0f be       	out	0x3f, r0	; 63
     10a:	0f 90       	pop	r0
     10c:	1f 90       	pop	r1
     10e:	18 95       	reti

00000110 <adc_init>:
     110:	ec e7       	ldi	r30, 0x7C	; 124
     112:	f0 e0       	ldi	r31, 0x00	; 0
     114:	80 81       	ld	r24, Z
     116:	80 6c       	ori	r24, 0xC0	; 192
     118:	80 83       	st	Z, r24
     11a:	ea e7       	ldi	r30, 0x7A	; 122
     11c:	f0 e0       	ldi	r31, 0x00	; 0
     11e:	80 81       	ld	r24, Z
     120:	8f 68       	ori	r24, 0x8F	; 143
     122:	80 83       	st	Z, r24
     124:	08 95       	ret

00000126 <adc_pin_select>:
     126:	ec e7       	ldi	r30, 0x7C	; 124
     128:	f0 e0       	ldi	r31, 0x00	; 0
     12a:	90 81       	ld	r25, Z
     12c:	90 7f       	andi	r25, 0xF0	; 240
     12e:	90 83       	st	Z, r25
     130:	90 81       	ld	r25, Z
     132:	89 2b       	or	r24, r25
     134:	80 83       	st	Z, r24
     136:	08 95       	ret

00000138 <adc_convert>:
     138:	ea e7       	ldi	r30, 0x7A	; 122
     13a:	f0 e0       	ldi	r31, 0x00	; 0
     13c:	80 81       	ld	r24, Z
     13e:	80 68       	ori	r24, 0x80	; 128
     140:	80 83       	st	Z, r24
     142:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
     146:	80 81       	ld	r24, Z
     148:	80 64       	ori	r24, 0x40	; 64
     14a:	80 83       	st	Z, r24
     14c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     150:	88 23       	and	r24, r24
     152:	e1 f3       	breq	.-8      	; 0x14c <adc_convert+0x14>
     154:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     158:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     15c:	ea e7       	ldi	r30, 0x7A	; 122
     15e:	f0 e0       	ldi	r31, 0x00	; 0
     160:	90 81       	ld	r25, Z
     162:	9f 77       	andi	r25, 0x7F	; 127
     164:	90 83       	st	Z, r25
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	98 2f       	mov	r25, r24
     16a:	88 27       	eor	r24, r24
     16c:	82 2b       	or	r24, r18
     16e:	08 95       	ret

00000170 <get_mVolt>:

uint16_t get_mVolt(uint8_t source){
	adc_pin_select(source);
     170:	0e 94 93 00 	call	0x126	; 0x126 <adc_pin_select>
	//uint16_t adc_tmp_data = adc_convert();
	return ADC_VOLT(adc_convert());
     174:	0e 94 9c 00 	call	0x138	; 0x138 <adc_convert>
     178:	bc 01       	movw	r22, r24
     17a:	80 e0       	ldi	r24, 0x00	; 0
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	0e 94 b0 06 	call	0xd60	; 0xd60 <__floatunsisf>
     182:	2d ec       	ldi	r18, 0xCD	; 205
     184:	3e e1       	ldi	r19, 0x1E	; 30
     186:	48 e9       	ldi	r20, 0x98	; 152
     188:	5f e3       	ldi	r21, 0x3F	; 63
     18a:	0e 94 16 07 	call	0xe2c	; 0xe2c <__mulsf3>
     18e:	0e 94 81 06 	call	0xd02	; 0xd02 <__fixunssfsi>
}
     192:	cb 01       	movw	r24, r22
     194:	08 95       	ret

00000196 <set_pin_level>:
*/


void set_pin_level(gpio *GPIOx , const bool level)
{
	if (level) {
     196:	66 23       	and	r22, r22
     198:	99 f0       	breq	.+38     	; 0x1c0 <set_pin_level+0x2a>
		*GPIOx->port |= 1 << GPIOx->pin;
     19a:	dc 01       	movw	r26, r24
     19c:	ed 91       	ld	r30, X+
     19e:	fc 91       	ld	r31, X
     1a0:	11 97       	sbiw	r26, 0x01	; 1
     1a2:	21 e0       	ldi	r18, 0x01	; 1
     1a4:	30 e0       	ldi	r19, 0x00	; 0
     1a6:	a9 01       	movw	r20, r18
     1a8:	12 96       	adiw	r26, 0x02	; 2
     1aa:	0c 90       	ld	r0, X
     1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <set_pin_level+0x1c>
     1ae:	44 0f       	add	r20, r20
     1b0:	55 1f       	adc	r21, r21
     1b2:	0a 94       	dec	r0
     1b4:	e2 f7       	brpl	.-8      	; 0x1ae <set_pin_level+0x18>
     1b6:	ca 01       	movw	r24, r20
     1b8:	90 81       	ld	r25, Z
     1ba:	89 2b       	or	r24, r25
     1bc:	80 83       	st	Z, r24
     1be:	08 95       	ret
		} else {
		*GPIOx->port &= ~(1 << GPIOx->pin);
     1c0:	dc 01       	movw	r26, r24
     1c2:	ed 91       	ld	r30, X+
     1c4:	fc 91       	ld	r31, X
     1c6:	11 97       	sbiw	r26, 0x01	; 1
     1c8:	21 e0       	ldi	r18, 0x01	; 1
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	a9 01       	movw	r20, r18
     1ce:	12 96       	adiw	r26, 0x02	; 2
     1d0:	0c 90       	ld	r0, X
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <set_pin_level+0x42>
     1d4:	44 0f       	add	r20, r20
     1d6:	55 1f       	adc	r21, r21
     1d8:	0a 94       	dec	r0
     1da:	e2 f7       	brpl	.-8      	; 0x1d4 <set_pin_level+0x3e>
     1dc:	ca 01       	movw	r24, r20
     1de:	80 95       	com	r24
     1e0:	90 81       	ld	r25, Z
     1e2:	89 23       	and	r24, r25
     1e4:	80 83       	st	Z, r24
     1e6:	08 95       	ret

000001e8 <set_pin_dir>:
	}
}

void set_pin_dir(gpio *GPIOx, const enum port_dir direction)
{
     1e8:	fc 01       	movw	r30, r24
	uint8_t *tmp_port = GPIOx->port-1;
     1ea:	30 81       	ld	r19, Z
     1ec:	21 81       	ldd	r18, Z+1	; 0x01
	switch (direction) {
     1ee:	61 30       	cpi	r22, 0x01	; 1
     1f0:	99 f0       	breq	.+38     	; 0x218 <set_pin_dir+0x30>
     1f2:	18 f0       	brcs	.+6      	; 0x1fa <set_pin_dir+0x12>
     1f4:	62 30       	cpi	r22, 0x02	; 2
     1f6:	f1 f0       	breq	.+60     	; 0x234 <set_pin_dir+0x4c>
     1f8:	08 95       	ret
		case PORT_DIR_IN:
		*tmp_port &= ~(1 << GPIOx->pin);
     1fa:	81 e0       	ldi	r24, 0x01	; 1
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	02 80       	ldd	r0, Z+2	; 0x02
     200:	02 c0       	rjmp	.+4      	; 0x206 <set_pin_dir+0x1e>
     202:	88 0f       	add	r24, r24
     204:	99 1f       	adc	r25, r25
     206:	0a 94       	dec	r0
     208:	e2 f7       	brpl	.-8      	; 0x202 <set_pin_dir+0x1a>
     20a:	e3 2f       	mov	r30, r19
     20c:	f2 2f       	mov	r31, r18
     20e:	80 95       	com	r24
     210:	92 91       	ld	r25, -Z
     212:	89 23       	and	r24, r25
     214:	80 83       	st	Z, r24
		break;
     216:	08 95       	ret
		case PORT_DIR_OUT:
		*tmp_port |= 1 << GPIOx->pin;
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	02 80       	ldd	r0, Z+2	; 0x02
     21e:	02 c0       	rjmp	.+4      	; 0x224 <set_pin_dir+0x3c>
     220:	88 0f       	add	r24, r24
     222:	99 1f       	adc	r25, r25
     224:	0a 94       	dec	r0
     226:	e2 f7       	brpl	.-8      	; 0x220 <set_pin_dir+0x38>
     228:	e3 2f       	mov	r30, r19
     22a:	f2 2f       	mov	r31, r18
     22c:	92 91       	ld	r25, -Z
     22e:	89 2b       	or	r24, r25
     230:	80 83       	st	Z, r24
		break;
     232:	08 95       	ret
		case PORT_DIR_OFF:
		*tmp_port &= ~(1 << GPIOx->pin);
     234:	81 e0       	ldi	r24, 0x01	; 1
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	ac 01       	movw	r20, r24
     23a:	02 80       	ldd	r0, Z+2	; 0x02
     23c:	02 c0       	rjmp	.+4      	; 0x242 <set_pin_dir+0x5a>
     23e:	44 0f       	add	r20, r20
     240:	55 1f       	adc	r21, r21
     242:	0a 94       	dec	r0
     244:	e2 f7       	brpl	.-8      	; 0x23e <set_pin_dir+0x56>
     246:	a3 2f       	mov	r26, r19
     248:	b2 2f       	mov	r27, r18
     24a:	40 95       	com	r20
     24c:	2e 91       	ld	r18, -X
     24e:	42 23       	and	r20, r18
     250:	4c 93       	st	X, r20
		*GPIOx->port &= ~(1 << GPIOx->pin);
     252:	a0 81       	ld	r26, Z
     254:	b1 81       	ldd	r27, Z+1	; 0x01
     256:	02 80       	ldd	r0, Z+2	; 0x02
     258:	02 c0       	rjmp	.+4      	; 0x25e <set_pin_dir+0x76>
     25a:	88 0f       	add	r24, r24
     25c:	99 1f       	adc	r25, r25
     25e:	0a 94       	dec	r0
     260:	e2 f7       	brpl	.-8      	; 0x25a <set_pin_dir+0x72>
     262:	80 95       	com	r24
     264:	9c 91       	ld	r25, X
     266:	89 23       	and	r24, r25
     268:	8c 93       	st	X, r24
     26a:	08 95       	ret

0000026c <rtc_int_enable>:
};



void rtc_int_enable(rtc_date *RTCx , const uint16_t int_time){
	rtc_config_3[0] |= (1 << TIE);
     26c:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <__data_end>
     270:	80 61       	ori	r24, 0x10	; 16
     272:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <__data_end>
	rtc_config_2[0] |= (1 << TD) | (1 << TE);
     276:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <rtc_config_2>
     27a:	81 61       	ori	r24, 0x11	; 17
     27c:	80 93 1f 02 	sts	0x021F, r24	; 0x80021f <rtc_config_2>
	
	twi_write(RTC_ADDR,TIMER_COUNTER0_REG,rtc_config_1,sizeof(rtc_config_1));
     280:	22 e0       	ldi	r18, 0x02	; 2
     282:	30 e0       	ldi	r19, 0x00	; 0
     284:	41 e0       	ldi	r20, 0x01	; 1
     286:	51 e0       	ldi	r21, 0x01	; 1
     288:	6b e0       	ldi	r22, 0x0B	; 11
     28a:	82 e3       	ldi	r24, 0x32	; 50
     28c:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
	twi_write(RTC_ADDR,EXT_REG,rtc_config_2,sizeof(rtc_config_2));
     290:	21 e0       	ldi	r18, 0x01	; 1
     292:	30 e0       	ldi	r19, 0x00	; 0
     294:	4f e1       	ldi	r20, 0x1F	; 31
     296:	52 e0       	ldi	r21, 0x02	; 2
     298:	6d e0       	ldi	r22, 0x0D	; 13
     29a:	82 e3       	ldi	r24, 0x32	; 50
     29c:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
	twi_write(RTC_ADDR,CONTROLL_REG,rtc_config_3,sizeof(rtc_config_3));
     2a0:	21 e0       	ldi	r18, 0x01	; 1
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	4e e1       	ldi	r20, 0x1E	; 30
     2a6:	52 e0       	ldi	r21, 0x02	; 2
     2a8:	6f e0       	ldi	r22, 0x0F	; 15
     2aa:	82 e3       	ldi	r24, 0x32	; 50
     2ac:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
     2b0:	08 95       	ret

000002b2 <BCDtoDEC>:
	twi_write(RTC_ADDR,0x00,rtc_raw,sizeof(rtc_raw));
}

uint8_t BCDtoDEC(uint8_t val)
{
	return ((val / 0x10) * 10) + (val % 0x10);
     2b2:	98 2f       	mov	r25, r24
     2b4:	92 95       	swap	r25
     2b6:	9f 70       	andi	r25, 0x0F	; 15
     2b8:	99 0f       	add	r25, r25
     2ba:	29 2f       	mov	r18, r25
     2bc:	22 0f       	add	r18, r18
     2be:	22 0f       	add	r18, r18
     2c0:	92 0f       	add	r25, r18
     2c2:	8f 70       	andi	r24, 0x0F	; 15
}
     2c4:	89 0f       	add	r24, r25
     2c6:	08 95       	ret

000002c8 <rtc_sync>:
	twi_write(RTC_ADDR,CONTROLL_REG,rtc_config_3,sizeof(rtc_config_3));
	
	
}

void rtc_sync(rtc_date *RTCx){
     2c8:	0f 93       	push	r16
     2ca:	1f 93       	push	r17
     2cc:	cf 93       	push	r28
     2ce:	df 93       	push	r29
     2d0:	cd b7       	in	r28, 0x3d	; 61
     2d2:	de b7       	in	r29, 0x3e	; 62
     2d4:	27 97       	sbiw	r28, 0x07	; 7
     2d6:	0f b6       	in	r0, 0x3f	; 63
     2d8:	f8 94       	cli
     2da:	de bf       	out	0x3e, r29	; 62
     2dc:	0f be       	out	0x3f, r0	; 63
     2de:	cd bf       	out	0x3d, r28	; 61
     2e0:	8c 01       	movw	r16, r24
	uint8_t rtc_raw[7];
	twi_read(RTC_ADDR, 0x00, rtc_raw, sizeof(rtc_raw));
     2e2:	27 e0       	ldi	r18, 0x07	; 7
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	ae 01       	movw	r20, r28
     2e8:	4f 5f       	subi	r20, 0xFF	; 255
     2ea:	5f 4f       	sbci	r21, 0xFF	; 255
     2ec:	60 e0       	ldi	r22, 0x00	; 0
     2ee:	82 e3       	ldi	r24, 0x32	; 50
     2f0:	0e 94 89 03 	call	0x712	; 0x712 <twi_read>
	RTCx->second=BCDtoDEC(rtc_raw[0]);
     2f4:	89 81       	ldd	r24, Y+1	; 0x01
     2f6:	0e 94 59 01 	call	0x2b2	; 0x2b2 <BCDtoDEC>
     2fa:	f8 01       	movw	r30, r16
     2fc:	80 83       	st	Z, r24
	RTCx->minute=BCDtoDEC(rtc_raw[1]);
     2fe:	8a 81       	ldd	r24, Y+2	; 0x02
     300:	0e 94 59 01 	call	0x2b2	; 0x2b2 <BCDtoDEC>
     304:	f8 01       	movw	r30, r16
     306:	81 83       	std	Z+1, r24	; 0x01
	RTCx->hour=BCDtoDEC(rtc_raw[2]);
     308:	8b 81       	ldd	r24, Y+3	; 0x03
     30a:	0e 94 59 01 	call	0x2b2	; 0x2b2 <BCDtoDEC>
     30e:	f8 01       	movw	r30, r16
     310:	82 83       	std	Z+2, r24	; 0x02
	RTCx->dayofweek=rtc_raw[3];
     312:	8c 81       	ldd	r24, Y+4	; 0x04
     314:	87 83       	std	Z+7, r24	; 0x07
	RTCx->date=BCDtoDEC(rtc_raw[4]);
     316:	8d 81       	ldd	r24, Y+5	; 0x05
     318:	0e 94 59 01 	call	0x2b2	; 0x2b2 <BCDtoDEC>
     31c:	f8 01       	movw	r30, r16
     31e:	83 83       	std	Z+3, r24	; 0x03
	RTCx->month=BCDtoDEC(rtc_raw[5]);
     320:	8e 81       	ldd	r24, Y+6	; 0x06
     322:	0e 94 59 01 	call	0x2b2	; 0x2b2 <BCDtoDEC>
     326:	f8 01       	movw	r30, r16
     328:	84 83       	std	Z+4, r24	; 0x04
	RTCx->year=BCDtoDEC(rtc_raw[6]);
     32a:	8f 81       	ldd	r24, Y+7	; 0x07
     32c:	0e 94 59 01 	call	0x2b2	; 0x2b2 <BCDtoDEC>
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	f8 01       	movw	r30, r16
     334:	96 83       	std	Z+6, r25	; 0x06
     336:	85 83       	std	Z+5, r24	; 0x05
}
     338:	27 96       	adiw	r28, 0x07	; 7
     33a:	0f b6       	in	r0, 0x3f	; 63
     33c:	f8 94       	cli
     33e:	de bf       	out	0x3e, r29	; 62
     340:	0f be       	out	0x3f, r0	; 63
     342:	cd bf       	out	0x3d, r28	; 61
     344:	df 91       	pop	r29
     346:	cf 91       	pop	r28
     348:	1f 91       	pop	r17
     34a:	0f 91       	pop	r16
     34c:	08 95       	ret

0000034e <DECtoBCD>:
}

// BCDtoDEC -- convert decimal to binary-coded decimal (BCD)
uint8_t DECtoBCD(uint8_t val)
{
	return ((val / 10) * 0x10) + (val % 10);
     34e:	9d ec       	ldi	r25, 0xCD	; 205
     350:	89 9f       	mul	r24, r25
     352:	91 2d       	mov	r25, r1
     354:	11 24       	eor	r1, r1
     356:	96 95       	lsr	r25
     358:	96 95       	lsr	r25
     35a:	96 95       	lsr	r25
     35c:	39 2f       	mov	r19, r25
     35e:	33 0f       	add	r19, r19
     360:	23 2f       	mov	r18, r19
     362:	22 0f       	add	r18, r18
     364:	22 0f       	add	r18, r18
     366:	23 0f       	add	r18, r19
     368:	82 1b       	sub	r24, r18
     36a:	20 e1       	ldi	r18, 0x10	; 16
     36c:	92 9f       	mul	r25, r18
     36e:	80 0d       	add	r24, r0
     370:	11 24       	eor	r1, r1
     372:	08 95       	ret

00000374 <rtc_set>:
	RTCx->dayofweek=rtc_raw[3];
	RTCx->date=BCDtoDEC(rtc_raw[4]);
	RTCx->month=BCDtoDEC(rtc_raw[5]);
	RTCx->year=BCDtoDEC(rtc_raw[6]);
}
void rtc_set(rtc_date *RTCx){
     374:	0f 93       	push	r16
     376:	1f 93       	push	r17
     378:	cf 93       	push	r28
     37a:	df 93       	push	r29
     37c:	cd b7       	in	r28, 0x3d	; 61
     37e:	de b7       	in	r29, 0x3e	; 62
     380:	27 97       	sbiw	r28, 0x07	; 7
     382:	0f b6       	in	r0, 0x3f	; 63
     384:	f8 94       	cli
     386:	de bf       	out	0x3e, r29	; 62
     388:	0f be       	out	0x3f, r0	; 63
     38a:	cd bf       	out	0x3d, r28	; 61
     38c:	8c 01       	movw	r16, r24
	uint8_t rtc_raw[7];
	rtc_raw[0]=DECtoBCD(RTCx->second);
     38e:	fc 01       	movw	r30, r24
     390:	80 81       	ld	r24, Z
     392:	0e 94 a7 01 	call	0x34e	; 0x34e <DECtoBCD>
     396:	89 83       	std	Y+1, r24	; 0x01
	rtc_raw[1]=DECtoBCD(RTCx->minute);
     398:	f8 01       	movw	r30, r16
     39a:	81 81       	ldd	r24, Z+1	; 0x01
     39c:	0e 94 a7 01 	call	0x34e	; 0x34e <DECtoBCD>
     3a0:	8a 83       	std	Y+2, r24	; 0x02
	rtc_raw[2]=DECtoBCD(RTCx->hour);
     3a2:	f8 01       	movw	r30, r16
     3a4:	82 81       	ldd	r24, Z+2	; 0x02
     3a6:	0e 94 a7 01 	call	0x34e	; 0x34e <DECtoBCD>
     3aa:	8b 83       	std	Y+3, r24	; 0x03
	rtc_raw[3]=RTCx->dayofweek;
     3ac:	f8 01       	movw	r30, r16
     3ae:	87 81       	ldd	r24, Z+7	; 0x07
     3b0:	8c 83       	std	Y+4, r24	; 0x04
	rtc_raw[4]=DECtoBCD(RTCx->date);
     3b2:	83 81       	ldd	r24, Z+3	; 0x03
     3b4:	0e 94 a7 01 	call	0x34e	; 0x34e <DECtoBCD>
     3b8:	8d 83       	std	Y+5, r24	; 0x05
	rtc_raw[5]=DECtoBCD(RTCx->month);
     3ba:	f8 01       	movw	r30, r16
     3bc:	84 81       	ldd	r24, Z+4	; 0x04
     3be:	0e 94 a7 01 	call	0x34e	; 0x34e <DECtoBCD>
     3c2:	8e 83       	std	Y+6, r24	; 0x06
	rtc_raw[6]=DECtoBCD(RTCx->year);
     3c4:	f8 01       	movw	r30, r16
     3c6:	85 81       	ldd	r24, Z+5	; 0x05
     3c8:	0e 94 a7 01 	call	0x34e	; 0x34e <DECtoBCD>
     3cc:	8f 83       	std	Y+7, r24	; 0x07
	twi_write(RTC_ADDR,0x00,rtc_raw,sizeof(rtc_raw));
     3ce:	27 e0       	ldi	r18, 0x07	; 7
     3d0:	30 e0       	ldi	r19, 0x00	; 0
     3d2:	ae 01       	movw	r20, r28
     3d4:	4f 5f       	subi	r20, 0xFF	; 255
     3d6:	5f 4f       	sbci	r21, 0xFF	; 255
     3d8:	60 e0       	ldi	r22, 0x00	; 0
     3da:	82 e3       	ldi	r24, 0x32	; 50
     3dc:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
}
     3e0:	27 96       	adiw	r28, 0x07	; 7
     3e2:	0f b6       	in	r0, 0x3f	; 63
     3e4:	f8 94       	cli
     3e6:	de bf       	out	0x3e, r29	; 62
     3e8:	0f be       	out	0x3f, r0	; 63
     3ea:	cd bf       	out	0x3d, r28	; 61
     3ec:	df 91       	pop	r29
     3ee:	cf 91       	pop	r28
     3f0:	1f 91       	pop	r17
     3f2:	0f 91       	pop	r16
     3f4:	08 95       	ret

000003f6 <led_board_init>:

void led_write_batch(uint8_t board_address, int *pwmChannels, uint8_t channels_num){
	twi_write_batch_by_reg(board_address, PWM0 | 0xA0, pwmChannels, channels_num);
}

void led_write_single(uint8_t board_address, uint8_t led_num, uint8_t brightness){
     3f6:	0f 93       	push	r16
     3f8:	1f 93       	push	r17
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	1f 92       	push	r1
     400:	cd b7       	in	r28, 0x3d	; 61
     402:	de b7       	in	r29, 0x3e	; 62
     404:	18 2f       	mov	r17, r24
     406:	19 82       	std	Y+1, r1	; 0x01
     408:	21 e0       	ldi	r18, 0x01	; 1
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	ae 01       	movw	r20, r28
     40e:	4f 5f       	subi	r20, 0xFF	; 255
     410:	5f 4f       	sbci	r21, 0xFF	; 255
     412:	60 e0       	ldi	r22, 0x00	; 0
     414:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
     418:	21 e0       	ldi	r18, 0x01	; 1
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	ae 01       	movw	r20, r28
     41e:	4f 5f       	subi	r20, 0xFF	; 255
     420:	5f 4f       	sbci	r21, 0xFF	; 255
     422:	61 e0       	ldi	r22, 0x01	; 1
     424:	81 2f       	mov	r24, r17
     426:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
     42a:	22 e0       	ldi	r18, 0x02	; 2
     42c:	30 e0       	ldi	r19, 0x00	; 0
     42e:	40 e2       	ldi	r20, 0x20	; 32
     430:	52 e0       	ldi	r21, 0x02	; 2
     432:	62 ea       	ldi	r22, 0xA2	; 162
     434:	81 2f       	mov	r24, r17
     436:	0e 94 51 04 	call	0x8a2	; 0x8a2 <twi_write_batch_by_reg>
     43a:	19 82       	std	Y+1, r1	; 0x01
     43c:	21 e0       	ldi	r18, 0x01	; 1
     43e:	30 e0       	ldi	r19, 0x00	; 0
     440:	ae 01       	movw	r20, r28
     442:	4f 5f       	subi	r20, 0xFF	; 255
     444:	5f 4f       	sbci	r21, 0xFF	; 255
     446:	62 e1       	ldi	r22, 0x12	; 18
     448:	81 2f       	mov	r24, r17
     44a:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
     44e:	8f ef       	ldi	r24, 0xFF	; 255
     450:	89 83       	std	Y+1, r24	; 0x01
     452:	21 e0       	ldi	r18, 0x01	; 1
     454:	30 e0       	ldi	r19, 0x00	; 0
     456:	ae 01       	movw	r20, r28
     458:	4f 5f       	subi	r20, 0xFF	; 255
     45a:	5f 4f       	sbci	r21, 0xFF	; 255
     45c:	63 e1       	ldi	r22, 0x13	; 19
     45e:	81 2f       	mov	r24, r17
     460:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
     464:	0a ea       	ldi	r16, 0xAA	; 170
     466:	09 83       	std	Y+1, r16	; 0x01
     468:	21 e0       	ldi	r18, 0x01	; 1
     46a:	30 e0       	ldi	r19, 0x00	; 0
     46c:	ae 01       	movw	r20, r28
     46e:	4f 5f       	subi	r20, 0xFF	; 255
     470:	5f 4f       	sbci	r21, 0xFF	; 255
     472:	64 e1       	ldi	r22, 0x14	; 20
     474:	81 2f       	mov	r24, r17
     476:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
     47a:	09 83       	std	Y+1, r16	; 0x01
     47c:	21 e0       	ldi	r18, 0x01	; 1
     47e:	30 e0       	ldi	r19, 0x00	; 0
     480:	ae 01       	movw	r20, r28
     482:	4f 5f       	subi	r20, 0xFF	; 255
     484:	5f 4f       	sbci	r21, 0xFF	; 255
     486:	65 e1       	ldi	r22, 0x15	; 21
     488:	81 2f       	mov	r24, r17
     48a:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
     48e:	09 83       	std	Y+1, r16	; 0x01
     490:	21 e0       	ldi	r18, 0x01	; 1
     492:	30 e0       	ldi	r19, 0x00	; 0
     494:	ae 01       	movw	r20, r28
     496:	4f 5f       	subi	r20, 0xFF	; 255
     498:	5f 4f       	sbci	r21, 0xFF	; 255
     49a:	66 e1       	ldi	r22, 0x16	; 22
     49c:	81 2f       	mov	r24, r17
     49e:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
     4a2:	09 83       	std	Y+1, r16	; 0x01
     4a4:	21 e0       	ldi	r18, 0x01	; 1
     4a6:	30 e0       	ldi	r19, 0x00	; 0
     4a8:	ae 01       	movw	r20, r28
     4aa:	4f 5f       	subi	r20, 0xFF	; 255
     4ac:	5f 4f       	sbci	r21, 0xFF	; 255
     4ae:	67 e1       	ldi	r22, 0x17	; 23
     4b0:	81 2f       	mov	r24, r17
     4b2:	0e 94 04 04 	call	0x808	; 0x808 <twi_write>
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	0f 90       	pop	r0
     4ba:	df 91       	pop	r29
     4bc:	cf 91       	pop	r28
     4be:	1f 91       	pop	r17
     4c0:	0f 91       	pop	r16
     4c2:	08 95       	ret

000004c4 <led_write_batch>:
     4c4:	24 2f       	mov	r18, r20
     4c6:	30 e0       	ldi	r19, 0x00	; 0
     4c8:	ab 01       	movw	r20, r22
     4ca:	62 ea       	ldi	r22, 0xA2	; 162
     4cc:	0e 94 51 04 	call	0x8a2	; 0x8a2 <twi_write_batch_by_reg>
     4d0:	08 95       	ret

000004d2 <run_wave>:
	
}

void run_wave(uint8_t cmd) {
     4d2:	0f 93       	push	r16
     4d4:	1f 93       	push	r17
     4d6:	cf 93       	push	r28
     4d8:	df 93       	push	r29
	uint8_t i = 0;
	uint8_t shifts = 0;
	uint8_t direction=0;
	uint8_t *brightness_ptr;
	uint8_t *leds_array = led_pattern;
	switch (cmd) {
     4da:	81 30       	cpi	r24, 0x01	; 1
     4dc:	a0 f0       	brcs	.+40     	; 0x506 <run_wave+0x34>
     4de:	83 30       	cpi	r24, 0x03	; 3
     4e0:	50 f0       	brcs	.+20     	; 0x4f6 <run_wave+0x24>
     4e2:	85 30       	cpi	r24, 0x05	; 5
     4e4:	80 f4       	brcc	.+32     	; 0x506 <run_wave+0x34>
		case ON_DOWN_UP:
		case OFF_DOWN_UP:
		direction = 0;
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
     4e6:	84 30       	cpi	r24, 0x04	; 4
     4e8:	91 f0       	breq	.+36     	; 0x50e <run_wave+0x3c>
     4ea:	82 30       	cpi	r24, 0x02	; 2
     4ec:	a1 f4       	brne	.+40     	; 0x516 <run_wave+0x44>
     4ee:	c3 e0       	ldi	r28, 0x03	; 3
     4f0:	d1 e0       	ldi	r29, 0x01	; 1
	uint8_t *brightness_ptr;
	uint8_t *leds_array = led_pattern;
	switch (cmd) {
		case ON_DOWN_UP:
		case OFF_DOWN_UP:
		direction = 0;
     4f2:	00 e0       	ldi	r16, 0x00	; 0
     4f4:	1b c0       	rjmp	.+54     	; 0x52c <run_wave+0x5a>
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
		break;
		case ON_UP_DOWN:
		case OFF_UP_DOWN:
		direction = 1;
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
     4f6:	84 30       	cpi	r24, 0x04	; 4
     4f8:	91 f0       	breq	.+36     	; 0x51e <run_wave+0x4c>
     4fa:	82 30       	cpi	r24, 0x02	; 2
     4fc:	a1 f4       	brne	.+40     	; 0x526 <run_wave+0x54>
     4fe:	c3 e0       	ldi	r28, 0x03	; 3
     500:	d1 e0       	ldi	r29, 0x01	; 1
		direction = 0;
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
		break;
		case ON_UP_DOWN:
		case OFF_UP_DOWN:
		direction = 1;
     502:	01 e0       	ldi	r16, 0x01	; 1
     504:	13 c0       	rjmp	.+38     	; 0x52c <run_wave+0x5a>
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
		break;
		default:
		direction = 0;
		brightness_ptr = brightness_on;
     506:	c6 e2       	ldi	r28, 0x26	; 38
     508:	d1 e0       	ldi	r29, 0x01	; 1
		case OFF_UP_DOWN:
		direction = 1;
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
		break;
		default:
		direction = 0;
     50a:	00 e0       	ldi	r16, 0x00	; 0
     50c:	0f c0       	rjmp	.+30     	; 0x52c <run_wave+0x5a>
	uint8_t *leds_array = led_pattern;
	switch (cmd) {
		case ON_DOWN_UP:
		case OFF_DOWN_UP:
		direction = 0;
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
     50e:	c3 e0       	ldi	r28, 0x03	; 3
     510:	d1 e0       	ldi	r29, 0x01	; 1
	uint8_t *brightness_ptr;
	uint8_t *leds_array = led_pattern;
	switch (cmd) {
		case ON_DOWN_UP:
		case OFF_DOWN_UP:
		direction = 0;
     512:	00 e0       	ldi	r16, 0x00	; 0
     514:	0b c0       	rjmp	.+22     	; 0x52c <run_wave+0x5a>
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
     516:	c6 e2       	ldi	r28, 0x26	; 38
     518:	d1 e0       	ldi	r29, 0x01	; 1
	uint8_t *brightness_ptr;
	uint8_t *leds_array = led_pattern;
	switch (cmd) {
		case ON_DOWN_UP:
		case OFF_DOWN_UP:
		direction = 0;
     51a:	00 e0       	ldi	r16, 0x00	; 0
     51c:	07 c0       	rjmp	.+14     	; 0x52c <run_wave+0x5a>
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
		break;
		case ON_UP_DOWN:
		case OFF_UP_DOWN:
		direction = 1;
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
     51e:	c3 e0       	ldi	r28, 0x03	; 3
     520:	d1 e0       	ldi	r29, 0x01	; 1
		direction = 0;
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
		break;
		case ON_UP_DOWN:
		case OFF_UP_DOWN:
		direction = 1;
     522:	01 e0       	ldi	r16, 0x01	; 1
     524:	03 c0       	rjmp	.+6      	; 0x52c <run_wave+0x5a>
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
     526:	c6 e2       	ldi	r28, 0x26	; 38
     528:	d1 e0       	ldi	r29, 0x01	; 1
		direction = 0;
		brightness_ptr = (cmd == OFF_DOWN_UP || cmd == OFF_UP_DOWN) ? brightness_off : brightness_on;
		break;
		case ON_UP_DOWN:
		case OFF_UP_DOWN:
		direction = 1;
     52a:	01 e0       	ldi	r16, 0x01	; 1
		direction = 0;
		brightness_ptr = brightness_on;
		break;
	}
		
	if (direction == 0){
     52c:	00 23       	and	r16, r16
     52e:	19 f1       	breq	.+70     	; 0x576 <run_wave+0xa4>
     530:	25 c0       	rjmp	.+74     	; 0x57c <run_wave+0xaa>
		for (shifts = 1; shifts < 20; shifts++) {
			for (i = 0; i < 16; i++) {
				leds_array[i] = brightness_ptr[i + shifts];
     532:	82 2f       	mov	r24, r18
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	dc 01       	movw	r26, r24
     538:	a0 5e       	subi	r26, 0xE0	; 224
     53a:	bd 4f       	sbci	r27, 0xFD	; 253
     53c:	81 0f       	add	r24, r17
     53e:	91 1d       	adc	r25, r1
     540:	fe 01       	movw	r30, r28
     542:	e8 0f       	add	r30, r24
     544:	f9 1f       	adc	r31, r25
     546:	80 81       	ld	r24, Z
     548:	8c 93       	st	X, r24
		break;
	}
		
	if (direction == 0){
		for (shifts = 1; shifts < 20; shifts++) {
			for (i = 0; i < 16; i++) {
     54a:	2f 5f       	subi	r18, 0xFF	; 255
     54c:	01 c0       	rjmp	.+2      	; 0x550 <run_wave+0x7e>
     54e:	20 e0       	ldi	r18, 0x00	; 0
     550:	20 31       	cpi	r18, 0x10	; 16
     552:	78 f3       	brcs	.-34     	; 0x532 <run_wave+0x60>
				leds_array[i] = brightness_ptr[i + shifts];
			}
			led_write_batch(TLC_ADDR, leds_array, 16);
     554:	40 e1       	ldi	r20, 0x10	; 16
     556:	60 e2       	ldi	r22, 0x20	; 32
     558:	72 e0       	ldi	r23, 0x02	; 2
     55a:	84 e6       	ldi	r24, 0x64	; 100
     55c:	0e 94 62 02 	call	0x4c4	; 0x4c4 <led_write_batch>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     560:	2f e7       	ldi	r18, 0x7F	; 127
     562:	88 e3       	ldi	r24, 0x38	; 56
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	21 50       	subi	r18, 0x01	; 1
     568:	80 40       	sbci	r24, 0x00	; 0
     56a:	90 40       	sbci	r25, 0x00	; 0
     56c:	e1 f7       	brne	.-8      	; 0x566 <run_wave+0x94>
     56e:	00 c0       	rjmp	.+0      	; 0x570 <run_wave+0x9e>
     570:	00 00       	nop
		brightness_ptr = brightness_on;
		break;
	}
		
	if (direction == 0){
		for (shifts = 1; shifts < 20; shifts++) {
     572:	1f 5f       	subi	r17, 0xFF	; 255
     574:	01 c0       	rjmp	.+2      	; 0x578 <run_wave+0xa6>
     576:	11 e0       	ldi	r17, 0x01	; 1
     578:	14 31       	cpi	r17, 0x14	; 20
     57a:	48 f3       	brcs	.-46     	; 0x54e <run_wave+0x7c>
			}
			led_write_batch(TLC_ADDR, leds_array, 16);
			_delay_ms(SHIF_DELAY);
		}
	}
	if (direction == 1){
     57c:	01 30       	cpi	r16, 0x01	; 1
     57e:	41 f5       	brne	.+80     	; 0x5d0 <run_wave+0xfe>
     580:	24 c0       	rjmp	.+72     	; 0x5ca <run_wave+0xf8>
		for (shifts = 1; shifts < 20; shifts++) {
			uint8_t reverce_index=16;
			for (i = 0; i < 16; i++) {
				reverce_index--;
     582:	91 50       	subi	r25, 0x01	; 1
				leds_array[reverce_index] = brightness_ptr[i + shifts];
     584:	a9 2f       	mov	r26, r25
     586:	b0 e0       	ldi	r27, 0x00	; 0
     588:	a0 5e       	subi	r26, 0xE0	; 224
     58a:	bd 4f       	sbci	r27, 0xFD	; 253
     58c:	e1 2f       	mov	r30, r17
     58e:	f0 e0       	ldi	r31, 0x00	; 0
     590:	e8 0f       	add	r30, r24
     592:	f1 1d       	adc	r31, r1
     594:	ec 0f       	add	r30, r28
     596:	fd 1f       	adc	r31, r29
     598:	20 81       	ld	r18, Z
     59a:	2c 93       	st	X, r18
		}
	}
	if (direction == 1){
		for (shifts = 1; shifts < 20; shifts++) {
			uint8_t reverce_index=16;
			for (i = 0; i < 16; i++) {
     59c:	8f 5f       	subi	r24, 0xFF	; 255
     59e:	02 c0       	rjmp	.+4      	; 0x5a4 <run_wave+0xd2>
     5a0:	90 e1       	ldi	r25, 0x10	; 16
     5a2:	80 e0       	ldi	r24, 0x00	; 0
     5a4:	80 31       	cpi	r24, 0x10	; 16
     5a6:	68 f3       	brcs	.-38     	; 0x582 <run_wave+0xb0>
				reverce_index--;
				leds_array[reverce_index] = brightness_ptr[i + shifts];
			}
			led_write_batch(TLC_ADDR, leds_array, 16);
     5a8:	40 e1       	ldi	r20, 0x10	; 16
     5aa:	60 e2       	ldi	r22, 0x20	; 32
     5ac:	72 e0       	ldi	r23, 0x02	; 2
     5ae:	84 e6       	ldi	r24, 0x64	; 100
     5b0:	0e 94 62 02 	call	0x4c4	; 0x4c4 <led_write_batch>
     5b4:	2f e7       	ldi	r18, 0x7F	; 127
     5b6:	88 e3       	ldi	r24, 0x38	; 56
     5b8:	91 e0       	ldi	r25, 0x01	; 1
     5ba:	21 50       	subi	r18, 0x01	; 1
     5bc:	80 40       	sbci	r24, 0x00	; 0
     5be:	90 40       	sbci	r25, 0x00	; 0
     5c0:	e1 f7       	brne	.-8      	; 0x5ba <run_wave+0xe8>
     5c2:	00 c0       	rjmp	.+0      	; 0x5c4 <run_wave+0xf2>
     5c4:	00 00       	nop
			led_write_batch(TLC_ADDR, leds_array, 16);
			_delay_ms(SHIF_DELAY);
		}
	}
	if (direction == 1){
		for (shifts = 1; shifts < 20; shifts++) {
     5c6:	1f 5f       	subi	r17, 0xFF	; 255
     5c8:	01 c0       	rjmp	.+2      	; 0x5cc <run_wave+0xfa>
     5ca:	11 e0       	ldi	r17, 0x01	; 1
     5cc:	14 31       	cpi	r17, 0x14	; 20
     5ce:	40 f3       	brcs	.-48     	; 0x5a0 <run_wave+0xce>
			led_write_batch(TLC_ADDR, leds_array, 16);
			_delay_ms(SHIF_DELAY);
		}
	}
	
}
     5d0:	df 91       	pop	r29
     5d2:	cf 91       	pop	r28
     5d4:	1f 91       	pop	r17
     5d6:	0f 91       	pop	r16
     5d8:	08 95       	ret

000005da <twi_start>:
	
	
	twi_stop();
	
	return err;
}
     5da:	85 ea       	ldi	r24, 0xA5	; 165
     5dc:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7f80dc>
     5e0:	80 e0       	ldi	r24, 0x00	; 0
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	05 c0       	rjmp	.+10     	; 0x5f0 <twi_start+0x16>
     5e6:	01 96       	adiw	r24, 0x01	; 1
     5e8:	80 34       	cpi	r24, 0x40	; 64
     5ea:	26 e0       	ldi	r18, 0x06	; 6
     5ec:	92 07       	cpc	r25, r18
     5ee:	30 f4       	brcc	.+12     	; 0x5fc <twi_start+0x22>
     5f0:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <status>
     5f4:	28 30       	cpi	r18, 0x08	; 8
     5f6:	b9 f7       	brne	.-18     	; 0x5e6 <twi_start+0xc>
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	08 95       	ret
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	08 95       	ret

00000600 <twi_stop>:
     600:	85 e9       	ldi	r24, 0x95	; 149
     602:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7f80dc>
     606:	08 95       	ret

00000608 <twi_restart>:
     608:	85 ea       	ldi	r24, 0xA5	; 165
     60a:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7f80dc>
     60e:	80 e0       	ldi	r24, 0x00	; 0
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	05 c0       	rjmp	.+10     	; 0x61e <twi_restart+0x16>
     614:	01 96       	adiw	r24, 0x01	; 1
     616:	80 34       	cpi	r24, 0x40	; 64
     618:	26 e0       	ldi	r18, 0x06	; 6
     61a:	92 07       	cpc	r25, r18
     61c:	30 f4       	brcc	.+12     	; 0x62a <twi_restart+0x22>
     61e:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <status>
     622:	20 31       	cpi	r18, 0x10	; 16
     624:	b9 f7       	brne	.-18     	; 0x614 <twi_restart+0xc>
     626:	80 e0       	ldi	r24, 0x00	; 0
     628:	08 95       	ret
     62a:	81 e0       	ldi	r24, 0x01	; 1
     62c:	08 95       	ret

0000062e <twi_addr_write_ack>:
     62e:	85 e8       	ldi	r24, 0x85	; 133
     630:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7f80dc>
     634:	80 e0       	ldi	r24, 0x00	; 0
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	05 c0       	rjmp	.+10     	; 0x644 <twi_addr_write_ack+0x16>
     63a:	01 96       	adiw	r24, 0x01	; 1
     63c:	80 34       	cpi	r24, 0x40	; 64
     63e:	26 e0       	ldi	r18, 0x06	; 6
     640:	92 07       	cpc	r25, r18
     642:	30 f4       	brcc	.+12     	; 0x650 <twi_addr_write_ack+0x22>
     644:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <status>
     648:	28 31       	cpi	r18, 0x18	; 24
     64a:	b9 f7       	brne	.-18     	; 0x63a <twi_addr_write_ack+0xc>
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	08 95       	ret
     650:	81 e0       	ldi	r24, 0x01	; 1
     652:	08 95       	ret

00000654 <twi_data_write_ack>:
     654:	85 e8       	ldi	r24, 0x85	; 133
     656:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7f80dc>
     65a:	80 e0       	ldi	r24, 0x00	; 0
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	05 c0       	rjmp	.+10     	; 0x66a <twi_data_write_ack+0x16>
     660:	01 96       	adiw	r24, 0x01	; 1
     662:	80 34       	cpi	r24, 0x40	; 64
     664:	26 e0       	ldi	r18, 0x06	; 6
     666:	92 07       	cpc	r25, r18
     668:	30 f4       	brcc	.+12     	; 0x676 <twi_data_write_ack+0x22>
     66a:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <status>
     66e:	28 32       	cpi	r18, 0x28	; 40
     670:	b9 f7       	brne	.-18     	; 0x660 <twi_data_write_ack+0xc>
     672:	80 e0       	ldi	r24, 0x00	; 0
     674:	08 95       	ret
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	08 95       	ret

0000067a <twi_addr_read_ack>:
     67a:	85 e8       	ldi	r24, 0x85	; 133
     67c:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7f80dc>
     680:	80 e0       	ldi	r24, 0x00	; 0
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	05 c0       	rjmp	.+10     	; 0x690 <twi_addr_read_ack+0x16>
     686:	01 96       	adiw	r24, 0x01	; 1
     688:	80 34       	cpi	r24, 0x40	; 64
     68a:	26 e0       	ldi	r18, 0x06	; 6
     68c:	92 07       	cpc	r25, r18
     68e:	30 f4       	brcc	.+12     	; 0x69c <twi_addr_read_ack+0x22>
     690:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <status>
     694:	20 34       	cpi	r18, 0x40	; 64
     696:	b9 f7       	brne	.-18     	; 0x686 <twi_addr_read_ack+0xc>
     698:	80 e0       	ldi	r24, 0x00	; 0
     69a:	08 95       	ret
     69c:	81 e0       	ldi	r24, 0x01	; 1
     69e:	08 95       	ret

000006a0 <twi_data_read_ack>:
     6a0:	88 23       	and	r24, r24
     6a2:	89 f0       	breq	.+34     	; 0x6c6 <twi_data_read_ack+0x26>
     6a4:	85 ec       	ldi	r24, 0xC5	; 197
     6a6:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7f80dc>
     6aa:	80 e0       	ldi	r24, 0x00	; 0
     6ac:	90 e0       	ldi	r25, 0x00	; 0
     6ae:	05 c0       	rjmp	.+10     	; 0x6ba <twi_data_read_ack+0x1a>
     6b0:	01 96       	adiw	r24, 0x01	; 1
     6b2:	80 34       	cpi	r24, 0x40	; 64
     6b4:	26 e0       	ldi	r18, 0x06	; 6
     6b6:	92 07       	cpc	r25, r18
     6b8:	b8 f4       	brcc	.+46     	; 0x6e8 <twi_data_read_ack+0x48>
     6ba:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <status>
     6be:	20 35       	cpi	r18, 0x50	; 80
     6c0:	b9 f7       	brne	.-18     	; 0x6b0 <twi_data_read_ack+0x10>
     6c2:	80 e0       	ldi	r24, 0x00	; 0
     6c4:	08 95       	ret
     6c6:	85 e8       	ldi	r24, 0x85	; 133
     6c8:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7f80dc>
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	05 c0       	rjmp	.+10     	; 0x6dc <twi_data_read_ack+0x3c>
     6d2:	01 96       	adiw	r24, 0x01	; 1
     6d4:	80 34       	cpi	r24, 0x40	; 64
     6d6:	26 e0       	ldi	r18, 0x06	; 6
     6d8:	92 07       	cpc	r25, r18
     6da:	40 f4       	brcc	.+16     	; 0x6ec <twi_data_read_ack+0x4c>
     6dc:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <status>
     6e0:	28 35       	cpi	r18, 0x58	; 88
     6e2:	b9 f7       	brne	.-18     	; 0x6d2 <twi_data_read_ack+0x32>
     6e4:	80 e0       	ldi	r24, 0x00	; 0
     6e6:	08 95       	ret
     6e8:	81 e0       	ldi	r24, 0x01	; 1
     6ea:	08 95       	ret
     6ec:	81 e0       	ldi	r24, 0x01	; 1
     6ee:	08 95       	ret

000006f0 <__vector_40>:
     6f0:	1f 92       	push	r1
     6f2:	0f 92       	push	r0
     6f4:	0f b6       	in	r0, 0x3f	; 63
     6f6:	0f 92       	push	r0
     6f8:	11 24       	eor	r1, r1
     6fa:	8f 93       	push	r24
     6fc:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7f80d9>
     700:	88 7f       	andi	r24, 0xF8	; 248
     702:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <status>
     706:	8f 91       	pop	r24
     708:	0f 90       	pop	r0
     70a:	0f be       	out	0x3f, r0	; 63
     70c:	0f 90       	pop	r0
     70e:	1f 90       	pop	r1
     710:	18 95       	reti

00000712 <twi_read>:
     712:	cf 92       	push	r12
     714:	df 92       	push	r13
     716:	ef 92       	push	r14
     718:	ff 92       	push	r15
     71a:	0f 93       	push	r16
     71c:	1f 93       	push	r17
     71e:	cf 93       	push	r28
     720:	d8 2e       	mov	r13, r24
     722:	c6 2e       	mov	r12, r22
     724:	7a 01       	movw	r14, r20
     726:	89 01       	movw	r16, r18
     728:	0e 94 ed 02 	call	0x5da	; 0x5da <twi_start>
     72c:	c8 2f       	mov	r28, r24
     72e:	88 23       	and	r24, r24
     730:	21 f0       	breq	.+8      	; 0x73a <twi_read+0x28>
     732:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     736:	8c 2f       	mov	r24, r28
     738:	5f c0       	rjmp	.+190    	; 0x7f8 <twi_read+0xe6>
     73a:	8d 2d       	mov	r24, r13
     73c:	88 0f       	add	r24, r24
     73e:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7f80db>
     742:	0e 94 17 03 	call	0x62e	; 0x62e <twi_addr_write_ack>
     746:	c8 2f       	mov	r28, r24
     748:	88 23       	and	r24, r24
     74a:	21 f0       	breq	.+8      	; 0x754 <twi_read+0x42>
     74c:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     750:	8c 2f       	mov	r24, r28
     752:	52 c0       	rjmp	.+164    	; 0x7f8 <twi_read+0xe6>
     754:	c0 92 db 00 	sts	0x00DB, r12	; 0x8000db <__TEXT_REGION_LENGTH__+0x7f80db>
     758:	0e 94 2a 03 	call	0x654	; 0x654 <twi_data_write_ack>
     75c:	c8 2f       	mov	r28, r24
     75e:	88 23       	and	r24, r24
     760:	21 f0       	breq	.+8      	; 0x76a <twi_read+0x58>
     762:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     766:	8c 2f       	mov	r24, r28
     768:	47 c0       	rjmp	.+142    	; 0x7f8 <twi_read+0xe6>
     76a:	0e 94 04 03 	call	0x608	; 0x608 <twi_restart>
     76e:	c8 2f       	mov	r28, r24
     770:	88 23       	and	r24, r24
     772:	21 f0       	breq	.+8      	; 0x77c <twi_read+0x6a>
     774:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     778:	8c 2f       	mov	r24, r28
     77a:	3e c0       	rjmp	.+124    	; 0x7f8 <twi_read+0xe6>
     77c:	8d 2d       	mov	r24, r13
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	88 0f       	add	r24, r24
     782:	99 1f       	adc	r25, r25
     784:	81 60       	ori	r24, 0x01	; 1
     786:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7f80db>
     78a:	0e 94 3d 03 	call	0x67a	; 0x67a <twi_addr_read_ack>
     78e:	c8 2f       	mov	r28, r24
     790:	88 23       	and	r24, r24
     792:	c1 f0       	breq	.+48     	; 0x7c4 <twi_read+0xb2>
     794:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     798:	8c 2f       	mov	r24, r28
     79a:	2e c0       	rjmp	.+92     	; 0x7f8 <twi_read+0xe6>
     79c:	81 e0       	ldi	r24, 0x01	; 1
     79e:	0e 94 50 03 	call	0x6a0	; 0x6a0 <twi_data_read_ack>
     7a2:	c8 2f       	mov	r28, r24
     7a4:	88 23       	and	r24, r24
     7a6:	21 f0       	breq	.+8      	; 0x7b0 <twi_read+0x9e>
     7a8:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     7ac:	8c 2f       	mov	r24, r28
     7ae:	24 c0       	rjmp	.+72     	; 0x7f8 <twi_read+0xe6>
     7b0:	f7 01       	movw	r30, r14
     7b2:	ec 0d       	add	r30, r12
     7b4:	fd 1d       	adc	r31, r13
     7b6:	80 91 db 00 	lds	r24, 0x00DB	; 0x8000db <__TEXT_REGION_LENGTH__+0x7f80db>
     7ba:	80 83       	st	Z, r24
     7bc:	8f ef       	ldi	r24, 0xFF	; 255
     7be:	c8 1a       	sub	r12, r24
     7c0:	d8 0a       	sbc	r13, r24
     7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <twi_read+0xb6>
     7c4:	c1 2c       	mov	r12, r1
     7c6:	d1 2c       	mov	r13, r1
     7c8:	c8 01       	movw	r24, r16
     7ca:	01 97       	sbiw	r24, 0x01	; 1
     7cc:	c8 16       	cp	r12, r24
     7ce:	d9 06       	cpc	r13, r25
     7d0:	28 f3       	brcs	.-54     	; 0x79c <twi_read+0x8a>
     7d2:	80 e0       	ldi	r24, 0x00	; 0
     7d4:	0e 94 50 03 	call	0x6a0	; 0x6a0 <twi_data_read_ack>
     7d8:	c8 2f       	mov	r28, r24
     7da:	88 23       	and	r24, r24
     7dc:	21 f0       	breq	.+8      	; 0x7e6 <twi_read+0xd4>
     7de:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     7e2:	8c 2f       	mov	r24, r28
     7e4:	09 c0       	rjmp	.+18     	; 0x7f8 <twi_read+0xe6>
     7e6:	f7 01       	movw	r30, r14
     7e8:	ec 0d       	add	r30, r12
     7ea:	fd 1d       	adc	r31, r13
     7ec:	80 91 db 00 	lds	r24, 0x00DB	; 0x8000db <__TEXT_REGION_LENGTH__+0x7f80db>
     7f0:	80 83       	st	Z, r24
     7f2:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     7f6:	8c 2f       	mov	r24, r28
     7f8:	cf 91       	pop	r28
     7fa:	1f 91       	pop	r17
     7fc:	0f 91       	pop	r16
     7fe:	ff 90       	pop	r15
     800:	ef 90       	pop	r14
     802:	df 90       	pop	r13
     804:	cf 90       	pop	r12
     806:	08 95       	ret

00000808 <twi_write>:
     808:	cf 92       	push	r12
     80a:	df 92       	push	r13
     80c:	ef 92       	push	r14
     80e:	ff 92       	push	r15
     810:	0f 93       	push	r16
     812:	1f 93       	push	r17
     814:	cf 93       	push	r28
     816:	18 2f       	mov	r17, r24
     818:	06 2f       	mov	r16, r22
     81a:	6a 01       	movw	r12, r20
     81c:	79 01       	movw	r14, r18
     81e:	0e 94 ed 02 	call	0x5da	; 0x5da <twi_start>
     822:	c8 2f       	mov	r28, r24
     824:	88 23       	and	r24, r24
     826:	21 f0       	breq	.+8      	; 0x830 <twi_write+0x28>
     828:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     82c:	8c 2f       	mov	r24, r28
     82e:	31 c0       	rjmp	.+98     	; 0x892 <twi_write+0x8a>
     830:	11 0f       	add	r17, r17
     832:	10 93 db 00 	sts	0x00DB, r17	; 0x8000db <__TEXT_REGION_LENGTH__+0x7f80db>
     836:	0e 94 17 03 	call	0x62e	; 0x62e <twi_addr_write_ack>
     83a:	c8 2f       	mov	r28, r24
     83c:	88 23       	and	r24, r24
     83e:	21 f0       	breq	.+8      	; 0x848 <twi_write+0x40>
     840:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     844:	8c 2f       	mov	r24, r28
     846:	25 c0       	rjmp	.+74     	; 0x892 <twi_write+0x8a>
     848:	00 93 db 00 	sts	0x00DB, r16	; 0x8000db <__TEXT_REGION_LENGTH__+0x7f80db>
     84c:	0e 94 2a 03 	call	0x654	; 0x654 <twi_data_write_ack>
     850:	c8 2f       	mov	r28, r24
     852:	88 23       	and	r24, r24
     854:	b1 f0       	breq	.+44     	; 0x882 <twi_write+0x7a>
     856:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     85a:	8c 2f       	mov	r24, r28
     85c:	1a c0       	rjmp	.+52     	; 0x892 <twi_write+0x8a>
     85e:	f6 01       	movw	r30, r12
     860:	e0 0f       	add	r30, r16
     862:	f1 1f       	adc	r31, r17
     864:	80 81       	ld	r24, Z
     866:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7f80db>
     86a:	0e 94 2a 03 	call	0x654	; 0x654 <twi_data_write_ack>
     86e:	c8 2f       	mov	r28, r24
     870:	88 23       	and	r24, r24
     872:	21 f0       	breq	.+8      	; 0x87c <twi_write+0x74>
     874:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     878:	8c 2f       	mov	r24, r28
     87a:	0b c0       	rjmp	.+22     	; 0x892 <twi_write+0x8a>
     87c:	0f 5f       	subi	r16, 0xFF	; 255
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	02 c0       	rjmp	.+4      	; 0x886 <twi_write+0x7e>
     882:	00 e0       	ldi	r16, 0x00	; 0
     884:	10 e0       	ldi	r17, 0x00	; 0
     886:	0e 15       	cp	r16, r14
     888:	1f 05       	cpc	r17, r15
     88a:	48 f3       	brcs	.-46     	; 0x85e <twi_write+0x56>
     88c:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
     890:	8c 2f       	mov	r24, r28
     892:	cf 91       	pop	r28
     894:	1f 91       	pop	r17
     896:	0f 91       	pop	r16
     898:	ff 90       	pop	r15
     89a:	ef 90       	pop	r14
     89c:	df 90       	pop	r13
     89e:	cf 90       	pop	r12
     8a0:	08 95       	ret

000008a2 <twi_write_batch_by_reg>:



uint8_t twi_write_batch_by_reg(uint8_t addr,uint8_t reg, uint8_t *data,uint16_t len){
     8a2:	cf 92       	push	r12
     8a4:	df 92       	push	r13
     8a6:	ef 92       	push	r14
     8a8:	ff 92       	push	r15
     8aa:	0f 93       	push	r16
     8ac:	1f 93       	push	r17
     8ae:	cf 93       	push	r28
     8b0:	18 2f       	mov	r17, r24
     8b2:	06 2f       	mov	r16, r22
     8b4:	6a 01       	movw	r12, r20
     8b6:	79 01       	movw	r14, r18
		
		uint16_t i = 0;
		uint8_t err = TWI_OK;
		
		err = twi_start();
     8b8:	0e 94 ed 02 	call	0x5da	; 0x5da <twi_start>
     8bc:	c8 2f       	mov	r28, r24
		if(err != TWI_OK){
     8be:	88 23       	and	r24, r24
     8c0:	21 f0       	breq	.+8      	; 0x8ca <twi_write_batch_by_reg+0x28>
			twi_stop();
     8c2:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
			return err;
     8c6:	8c 2f       	mov	r24, r28
     8c8:	31 c0       	rjmp	.+98     	; 0x92c <__stack+0x2d>
		}
		TWDR1 = (addr << 1) | 0;
     8ca:	11 0f       	add	r17, r17
     8cc:	10 93 db 00 	sts	0x00DB, r17	; 0x8000db <__TEXT_REGION_LENGTH__+0x7f80db>
		
		
		err = twi_addr_write_ack();
     8d0:	0e 94 17 03 	call	0x62e	; 0x62e <twi_addr_write_ack>
     8d4:	c8 2f       	mov	r28, r24
		if(err != TWI_OK){
     8d6:	88 23       	and	r24, r24
     8d8:	21 f0       	breq	.+8      	; 0x8e2 <twi_write_batch_by_reg+0x40>
			twi_stop();
     8da:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
			return err;
     8de:	8c 2f       	mov	r24, r28
     8e0:	25 c0       	rjmp	.+74     	; 0x92c <__stack+0x2d>
		}
		
		
		TWDR1 = reg;
     8e2:	00 93 db 00 	sts	0x00DB, r16	; 0x8000db <__TEXT_REGION_LENGTH__+0x7f80db>
		err = twi_data_write_ack();
     8e6:	0e 94 2a 03 	call	0x654	; 0x654 <twi_data_write_ack>
     8ea:	c8 2f       	mov	r28, r24
		if(err != TWI_OK){
     8ec:	88 23       	and	r24, r24
     8ee:	b1 f0       	breq	.+44     	; 0x91c <__stack+0x1d>
			twi_stop();
     8f0:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
			return err;
     8f4:	8c 2f       	mov	r24, r28
     8f6:	1a c0       	rjmp	.+52     	; 0x92c <__stack+0x2d>
		}
		
		for(i = 0; i < len;i++){
			TWDR1 = data[i];
     8f8:	f6 01       	movw	r30, r12
     8fa:	e0 0f       	add	r30, r16
     8fc:	f1 1f       	adc	r31, r17
     8fe:	80 81       	ld	r24, Z
     900:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7f80db>
			err = twi_data_write_ack();
     904:	0e 94 2a 03 	call	0x654	; 0x654 <twi_data_write_ack>
     908:	c8 2f       	mov	r28, r24
			if(err != TWI_OK){
     90a:	88 23       	and	r24, r24
     90c:	21 f0       	breq	.+8      	; 0x916 <__stack+0x17>
				twi_stop();
     90e:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
				return err;
     912:	8c 2f       	mov	r24, r28
     914:	0b c0       	rjmp	.+22     	; 0x92c <__stack+0x2d>
		if(err != TWI_OK){
			twi_stop();
			return err;
		}
		
		for(i = 0; i < len;i++){
     916:	0f 5f       	subi	r16, 0xFF	; 255
     918:	1f 4f       	sbci	r17, 0xFF	; 255
     91a:	02 c0       	rjmp	.+4      	; 0x920 <__stack+0x21>
     91c:	00 e0       	ldi	r16, 0x00	; 0
     91e:	10 e0       	ldi	r17, 0x00	; 0
     920:	0e 15       	cp	r16, r14
     922:	1f 05       	cpc	r17, r15
     924:	48 f3       	brcs	.-46     	; 0x8f8 <twi_write_batch_by_reg+0x56>
				return err;
			}
		}
		
		
		twi_stop();
     926:	0e 94 00 03 	call	0x600	; 0x600 <twi_stop>
		
		return err;
     92a:	8c 2f       	mov	r24, r28
}
     92c:	cf 91       	pop	r28
     92e:	1f 91       	pop	r17
     930:	0f 91       	pop	r16
     932:	ff 90       	pop	r15
     934:	ef 90       	pop	r14
     936:	df 90       	pop	r13
     938:	cf 90       	pop	r12
     93a:	08 95       	ret

0000093c <twi_init>:





void twi_init(uint32_t speed){
     93c:	9b 01       	movw	r18, r22
     93e:	ac 01       	movw	r20, r24
	
	uint32_t gen_t = 0;
	gen_t = (((F_CPU/speed) - 16) / 2) & 0xFF;
     940:	60 e0       	ldi	r22, 0x00	; 0
     942:	72 e1       	ldi	r23, 0x12	; 18
     944:	8a e7       	ldi	r24, 0x7A	; 122
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	0e 94 ab 07 	call	0xf56	; 0xf56 <__udivmodsi4>
     94c:	da 01       	movw	r26, r20
     94e:	c9 01       	movw	r24, r18
     950:	40 97       	sbiw	r24, 0x10	; 16
     952:	a1 09       	sbc	r26, r1
     954:	b1 09       	sbc	r27, r1
     956:	b6 95       	lsr	r27
     958:	a7 95       	ror	r26
     95a:	97 95       	ror	r25
     95c:	87 95       	ror	r24
	TWBR1 = gen_t & 0xFF;
     95e:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7f80d8>
	TWCR1 = (1 << TWEN) | (1 << TWIE);
     962:	85 e0       	ldi	r24, 0x05	; 5
     964:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7f80dc>
     968:	08 95       	ret

0000096a <__vector_18>:

void uart_send_array(uint8_t *c,uint16_t len){
	for(uint16_t i = 0; i < len;i++){
		uart_send_byte(c[i]);
	}
}
     96a:	1f 92       	push	r1
     96c:	0f 92       	push	r0
     96e:	0f b6       	in	r0, 0x3f	; 63
     970:	0f 92       	push	r0
     972:	11 24       	eor	r1, r1
     974:	8f 93       	push	r24
     976:	9f 93       	push	r25
     978:	ef 93       	push	r30
     97a:	ff 93       	push	r31
     97c:	e0 91 b0 02 	lds	r30, 0x02B0	; 0x8002b0 <rx_count>
     980:	f0 91 b1 02 	lds	r31, 0x02B1	; 0x8002b1 <rx_count+0x1>
     984:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     988:	e0 5d       	subi	r30, 0xD0	; 208
     98a:	fd 4f       	sbci	r31, 0xFD	; 253
     98c:	80 83       	st	Z, r24
     98e:	e0 91 b0 02 	lds	r30, 0x02B0	; 0x8002b0 <rx_count>
     992:	f0 91 b1 02 	lds	r31, 0x02B1	; 0x8002b1 <rx_count+0x1>
     996:	e0 5d       	subi	r30, 0xD0	; 208
     998:	fd 4f       	sbci	r31, 0xFD	; 253
     99a:	80 81       	ld	r24, Z
     99c:	8d 30       	cpi	r24, 0x0D	; 13
     99e:	51 f4       	brne	.+20     	; 0x9b4 <__vector_18+0x4a>
     9a0:	81 e0       	ldi	r24, 0x01	; 1
     9a2:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <read_complete>
     9a6:	e0 91 b0 02 	lds	r30, 0x02B0	; 0x8002b0 <rx_count>
     9aa:	f0 91 b1 02 	lds	r31, 0x02B1	; 0x8002b1 <rx_count+0x1>
     9ae:	ef 5c       	subi	r30, 0xCF	; 207
     9b0:	fd 4f       	sbci	r31, 0xFD	; 253
     9b2:	10 82       	st	Z, r1
     9b4:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <rx_count>
     9b8:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <rx_count+0x1>
     9bc:	01 96       	adiw	r24, 0x01	; 1
     9be:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <rx_count+0x1>
     9c2:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <rx_count>
     9c6:	ff 91       	pop	r31
     9c8:	ef 91       	pop	r30
     9ca:	9f 91       	pop	r25
     9cc:	8f 91       	pop	r24
     9ce:	0f 90       	pop	r0
     9d0:	0f be       	out	0x3f, r0	; 63
     9d2:	0f 90       	pop	r0
     9d4:	1f 90       	pop	r1
     9d6:	18 95       	reti

000009d8 <__vector_20>:
     9d8:	1f 92       	push	r1
     9da:	0f 92       	push	r0
     9dc:	0f b6       	in	r0, 0x3f	; 63
     9de:	0f 92       	push	r0
     9e0:	11 24       	eor	r1, r1
     9e2:	8f 93       	push	r24
     9e4:	81 e0       	ldi	r24, 0x01	; 1
     9e6:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <uart_tx_busy>
     9ea:	8f 91       	pop	r24
     9ec:	0f 90       	pop	r0
     9ee:	0f be       	out	0x3f, r0	; 63
     9f0:	0f 90       	pop	r0
     9f2:	1f 90       	pop	r1
     9f4:	18 95       	reti

000009f6 <uart_init>:
     9f6:	44 23       	and	r20, r20
     9f8:	39 f0       	breq	.+14     	; 0xa08 <uart_init+0x12>
     9fa:	e0 ec       	ldi	r30, 0xC0	; 192
     9fc:	f0 e0       	ldi	r31, 0x00	; 0
     9fe:	20 81       	ld	r18, Z
     a00:	22 60       	ori	r18, 0x02	; 2
     a02:	20 83       	st	Z, r18
     a04:	a8 e0       	ldi	r26, 0x08	; 8
     a06:	01 c0       	rjmp	.+2      	; 0xa0a <uart_init+0x14>
     a08:	a0 e1       	ldi	r26, 0x10	; 16
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	9b 01       	movw	r18, r22
     a0e:	ac 01       	movw	r20, r24
     a10:	0e 94 cd 07 	call	0xf9a	; 0xf9a <__muluhisi3>
     a14:	9b 01       	movw	r18, r22
     a16:	ac 01       	movw	r20, r24
     a18:	60 e0       	ldi	r22, 0x00	; 0
     a1a:	72 e1       	ldi	r23, 0x12	; 18
     a1c:	8a e7       	ldi	r24, 0x7A	; 122
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	0e 94 ab 07 	call	0xf56	; 0xf56 <__udivmodsi4>
     a24:	ba 01       	movw	r22, r20
     a26:	a9 01       	movw	r20, r18
     a28:	41 50       	subi	r20, 0x01	; 1
     a2a:	51 09       	sbc	r21, r1
     a2c:	61 09       	sbc	r22, r1
     a2e:	71 09       	sbc	r23, r1
     a30:	db 01       	movw	r26, r22
     a32:	ca 01       	movw	r24, r20
     a34:	88 27       	eor	r24, r24
     a36:	9f 70       	andi	r25, 0x0F	; 15
     a38:	aa 27       	eor	r26, r26
     a3a:	bb 27       	eor	r27, r27
     a3c:	89 2f       	mov	r24, r25
     a3e:	9a 2f       	mov	r25, r26
     a40:	ab 2f       	mov	r26, r27
     a42:	bb 27       	eor	r27, r27
     a44:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     a48:	40 93 c4 00 	sts	0x00C4, r20	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     a4c:	e1 ec       	ldi	r30, 0xC1	; 193
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	80 81       	ld	r24, Z
     a52:	88 6d       	ori	r24, 0xD8	; 216
     a54:	80 83       	st	Z, r24
     a56:	86 e8       	ldi	r24, 0x86	; 134
     a58:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     a5c:	08 95       	ret

00000a5e <uart_send_byte>:
     a5e:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <uart_tx_busy>
     a62:	99 23       	and	r25, r25
     a64:	e1 f3       	breq	.-8      	; 0xa5e <uart_send_byte>
     a66:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <uart_tx_busy>
     a6a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     a6e:	08 95       	ret

00000a70 <uart_send_string>:

void uart_send_string(uint8_t *c){
     a70:	0f 93       	push	r16
     a72:	1f 93       	push	r17
     a74:	cf 93       	push	r28
     a76:	df 93       	push	r29
     a78:	8c 01       	movw	r16, r24
	uint16_t i = 0;
     a7a:	c0 e0       	ldi	r28, 0x00	; 0
     a7c:	d0 e0       	ldi	r29, 0x00	; 0
	do{
		uart_send_byte(c[i]);
     a7e:	f8 01       	movw	r30, r16
     a80:	ec 0f       	add	r30, r28
     a82:	fd 1f       	adc	r31, r29
     a84:	80 81       	ld	r24, Z
     a86:	0e 94 2f 05 	call	0xa5e	; 0xa5e <uart_send_byte>
		i++;
     a8a:	21 96       	adiw	r28, 0x01	; 1
		
	}while(c[i] != '\0');
     a8c:	f8 01       	movw	r30, r16
     a8e:	ec 0f       	add	r30, r28
     a90:	fd 1f       	adc	r31, r29
     a92:	80 81       	ld	r24, Z
     a94:	81 11       	cpse	r24, r1
     a96:	f3 cf       	rjmp	.-26     	; 0xa7e <uart_send_string+0xe>
	//uart_send_byte(c[i]);
}
     a98:	df 91       	pop	r29
     a9a:	cf 91       	pop	r28
     a9c:	1f 91       	pop	r17
     a9e:	0f 91       	pop	r16
     aa0:	08 95       	ret

00000aa2 <__vector_1>:
	///uint8_t brightness[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 100, 250, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100};	

	uint8_t pwmChannels[16];
	
		
ISR(INT0_vect){
     aa2:	1f 92       	push	r1
     aa4:	0f 92       	push	r0
     aa6:	0f b6       	in	r0, 0x3f	; 63
     aa8:	0f 92       	push	r0
     aaa:	11 24       	eor	r1, r1
     aac:	8f 93       	push	r24
	rtc_int_request=1;
     aae:	81 e0       	ldi	r24, 0x01	; 1
     ab0:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <rtc_int_request>
	//toggle_pin_level(&ld1);
}
     ab4:	8f 91       	pop	r24
     ab6:	0f 90       	pop	r0
     ab8:	0f be       	out	0x3f, r0	; 63
     aba:	0f 90       	pop	r0
     abc:	1f 90       	pop	r1
     abe:	18 95       	reti

00000ac0 <__vector_2>:

ISR(INT1_vect){
     ac0:	1f 92       	push	r1
     ac2:	0f 92       	push	r0
     ac4:	0f b6       	in	r0, 0x3f	; 63
     ac6:	0f 92       	push	r0
     ac8:	11 24       	eor	r1, r1
     aca:	8f 93       	push	r24
	pir1_active=1;
     acc:	81 e0       	ldi	r24, 0x01	; 1
     ace:	80 93 b5 02 	sts	0x02B5, r24	; 0x8002b5 <pir1_active>
	//toggle_pin_level(&ld1);
}
     ad2:	8f 91       	pop	r24
     ad4:	0f 90       	pop	r0
     ad6:	0f be       	out	0x3f, r0	; 63
     ad8:	0f 90       	pop	r0
     ada:	1f 90       	pop	r1
     adc:	18 95       	reti

00000ade <main>:

	
int main(void)
{
     ade:	cf 93       	push	r28
     ae0:	df 93       	push	r29
     ae2:	cd b7       	in	r28, 0x3d	; 61
     ae4:	de b7       	in	r29, 0x3e	; 62
     ae6:	c0 58       	subi	r28, 0x80	; 128
     ae8:	d1 09       	sbc	r29, r1
     aea:	0f b6       	in	r0, 0x3f	; 63
     aec:	f8 94       	cli
     aee:	de bf       	out	0x3e, r29	; 62
     af0:	0f be       	out	0x3f, r0	; 63
     af2:	cd bf       	out	0x3d, r28	; 61
	char char_array[128]="\0";
     af4:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <rtc_int+0x3>
     af8:	90 91 64 01 	lds	r25, 0x0164	; 0x800164 <rtc_int+0x4>
     afc:	9a 83       	std	Y+2, r25	; 0x02
     afe:	89 83       	std	Y+1, r24	; 0x01
     b00:	fe 01       	movw	r30, r28
     b02:	33 96       	adiw	r30, 0x03	; 3
     b04:	8e e7       	ldi	r24, 0x7E	; 126
     b06:	df 01       	movw	r26, r30
     b08:	1d 92       	st	X+, r1
     b0a:	8a 95       	dec	r24
     b0c:	e9 f7       	brne	.-6      	; 0xb08 <main+0x2a>
	uart_init(9600,1);
     b0e:	41 e0       	ldi	r20, 0x01	; 1
     b10:	60 e8       	ldi	r22, 0x80	; 128
     b12:	75 e2       	ldi	r23, 0x25	; 37
     b14:	80 e0       	ldi	r24, 0x00	; 0
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <uart_init>
	twi_init(400000);
     b1c:	60 e8       	ldi	r22, 0x80	; 128
     b1e:	7a e1       	ldi	r23, 0x1A	; 26
     b20:	86 e0       	ldi	r24, 0x06	; 6
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	0e 94 9e 04 	call	0x93c	; 0x93c <twi_init>
	
	EICRA |= (0b10 << ISC00) | (0b11 << ISC10);
     b28:	e9 e6       	ldi	r30, 0x69	; 105
     b2a:	f0 e0       	ldi	r31, 0x00	; 0
     b2c:	80 81       	ld	r24, Z
     b2e:	8e 60       	ori	r24, 0x0E	; 14
     b30:	80 83       	st	Z, r24
	EIMSK = 0x03; //0b00000001
     b32:	83 e0       	ldi	r24, 0x03	; 3
     b34:	8d bb       	out	0x1d, r24	; 29
	
	set_pin_dir(&ld1 , PORT_DIR_OUT); set_pin_level(&ld1, true);
     b36:	61 e0       	ldi	r22, 0x01	; 1
     b38:	87 e5       	ldi	r24, 0x57	; 87
     b3a:	91 e0       	ldi	r25, 0x01	; 1
     b3c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <set_pin_dir>
     b40:	61 e0       	ldi	r22, 0x01	; 1
     b42:	87 e5       	ldi	r24, 0x57	; 87
     b44:	91 e0       	ldi	r25, 0x01	; 1
     b46:	0e 94 cb 00 	call	0x196	; 0x196 <set_pin_level>
	set_pin_dir(&led_rst , PORT_DIR_OUT); set_pin_level(&led_rst, false);
     b4a:	61 e0       	ldi	r22, 0x01	; 1
     b4c:	8a e5       	ldi	r24, 0x5A	; 90
     b4e:	91 e0       	ldi	r25, 0x01	; 1
     b50:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <set_pin_dir>
     b54:	60 e0       	ldi	r22, 0x00	; 0
     b56:	8a e5       	ldi	r24, 0x5A	; 90
     b58:	91 e0       	ldi	r25, 0x01	; 1
     b5a:	0e 94 cb 00 	call	0x196	; 0x196 <set_pin_level>
	
	
	set_pin_dir(&rtc_int, PORT_DIR_IN);
     b5e:	60 e0       	ldi	r22, 0x00	; 0
     b60:	80 e6       	ldi	r24, 0x60	; 96
     b62:	91 e0       	ldi	r25, 0x01	; 1
     b64:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <set_pin_dir>
	set_pin_dir(&pir1_int, PORT_DIR_IN);
     b68:	60 e0       	ldi	r22, 0x00	; 0
     b6a:	8d e5       	ldi	r24, 0x5D	; 93
     b6c:	91 e0       	ldi	r25, 0x01	; 1
     b6e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <set_pin_dir>
	
	
	sei();
     b72:	78 94       	sei
	rtc_set(&sys_rtc);
     b74:	8f e4       	ldi	r24, 0x4F	; 79
     b76:	91 e0       	ldi	r25, 0x01	; 1
     b78:	0e 94 ba 01 	call	0x374	; 0x374 <rtc_set>
	rtc_int_enable(&sys_rtc ,0);
     b7c:	60 e0       	ldi	r22, 0x00	; 0
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	8f e4       	ldi	r24, 0x4F	; 79
     b82:	91 e0       	ldi	r25, 0x01	; 1
     b84:	0e 94 36 01 	call	0x26c	; 0x26c <rtc_int_enable>
	adc_init();
     b88:	0e 94 88 00 	call	0x110	; 0x110 <adc_init>

	//led_board_sw_reset(panel_addr);
	

	
	uart_send_string((uint8_t *)"RUN\n\r");
     b8c:	83 ee       	ldi	r24, 0xE3	; 227
     b8e:	91 e0       	ldi	r25, 0x01	; 1
     b90:	0e 94 38 05 	call	0xa70	; 0xa70 <uart_send_string>
		sleep_enable();
     b94:	83 b7       	in	r24, 0x33	; 51
     b96:	81 60       	ori	r24, 0x01	; 1
     b98:	83 bf       	out	0x33, r24	; 51
		set_sleep_mode(SLEEP_MODE_PWR_DOWN);
     b9a:	83 b7       	in	r24, 0x33	; 51
     b9c:	81 7f       	andi	r24, 0xF1	; 241
     b9e:	84 60       	ori	r24, 0x04	; 4
     ba0:	83 bf       	out	0x33, r24	; 51
    while (1) 
    {
		
		
		if (pir1_active == 1){
     ba2:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <pir1_active>
     ba6:	81 30       	cpi	r24, 0x01	; 1
     ba8:	49 f4       	brne	.+18     	; 0xbbc <main+0xde>
			//uart_send_string((uint8_t *)"INT1\n\r");
			if(isActive == 0){
     baa:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <isActive>
     bae:	81 11       	cpse	r24, r1
     bb0:	03 c0       	rjmp	.+6      	; 0xbb8 <main+0xda>
				action_request = ON_UP_DOWN;
     bb2:	81 e0       	ldi	r24, 0x01	; 1
     bb4:	80 93 b3 02 	sts	0x02B3, r24	; 0x8002b3 <action_request>
			}
			
			pir1_active=0;
     bb8:	10 92 b5 02 	sts	0x02B5, r1	; 0x8002b5 <pir1_active>
		}
		
		
		if(action_request != 0 && active_timer == 0){
     bbc:	80 91 b3 02 	lds	r24, 0x02B3	; 0x8002b3 <action_request>
     bc0:	88 23       	and	r24, r24
     bc2:	09 f4       	brne	.+2      	; 0xbc6 <main+0xe8>
     bc4:	5a c0       	rjmp	.+180    	; 0xc7a <main+0x19c>
     bc6:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <active_timer>
     bca:	81 11       	cpse	r24, r1
     bcc:	56 c0       	rjmp	.+172    	; 0xc7a <main+0x19c>
			uart_send_string((uint8_t *)"CASE\n\r");
     bce:	89 ee       	ldi	r24, 0xE9	; 233
     bd0:	91 e0       	ldi	r25, 0x01	; 1
     bd2:	0e 94 38 05 	call	0xa70	; 0xa70 <uart_send_string>
			switch (action_request) {
     bd6:	80 91 b3 02 	lds	r24, 0x02B3	; 0x8002b3 <action_request>
     bda:	81 30       	cpi	r24, 0x01	; 1
     bdc:	19 f0       	breq	.+6      	; 0xbe4 <main+0x106>
     bde:	83 30       	cpi	r24, 0x03	; 3
     be0:	e1 f0       	breq	.+56     	; 0xc1a <main+0x13c>
     be2:	36 c0       	rjmp	.+108    	; 0xc50 <main+0x172>
				case ON_UP_DOWN:
					if(isActive == 0){
     be4:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <isActive>
     be8:	81 11       	cpse	r24, r1
     bea:	47 c0       	rjmp	.+142    	; 0xc7a <main+0x19c>
						isActive = 1;
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <isActive>
						active_timer = 5;
     bf2:	85 e0       	ldi	r24, 0x05	; 5
     bf4:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <active_timer>
						set_pin_level(&led_rst, true);
     bf8:	61 e0       	ldi	r22, 0x01	; 1
     bfa:	8a e5       	ldi	r24, 0x5A	; 90
     bfc:	91 e0       	ldi	r25, 0x01	; 1
     bfe:	0e 94 cb 00 	call	0x196	; 0x196 <set_pin_level>
						led_board_init(panel_addr);
     c02:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <panel_addr>
     c06:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <led_board_init>
						run_wave(action_request);
     c0a:	80 91 b3 02 	lds	r24, 0x02B3	; 0x8002b3 <action_request>
     c0e:	0e 94 69 02 	call	0x4d2	; 0x4d2 <run_wave>
						action_request = OFF_UP_DOWN;
     c12:	82 e0       	ldi	r24, 0x02	; 2
     c14:	80 93 b3 02 	sts	0x02B3, r24	; 0x8002b3 <action_request>
     c18:	30 c0       	rjmp	.+96     	; 0xc7a <main+0x19c>
					}
				break;
				case ON_DOWN_UP:
					if(isActive == 0){
     c1a:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <isActive>
     c1e:	81 11       	cpse	r24, r1
     c20:	2c c0       	rjmp	.+88     	; 0xc7a <main+0x19c>
						isActive = 1;
     c22:	81 e0       	ldi	r24, 0x01	; 1
     c24:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <isActive>
						active_timer = 5;
     c28:	85 e0       	ldi	r24, 0x05	; 5
     c2a:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <active_timer>
						set_pin_level(&led_rst, true);
     c2e:	61 e0       	ldi	r22, 0x01	; 1
     c30:	8a e5       	ldi	r24, 0x5A	; 90
     c32:	91 e0       	ldi	r25, 0x01	; 1
     c34:	0e 94 cb 00 	call	0x196	; 0x196 <set_pin_level>
						led_board_init(panel_addr);
     c38:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <panel_addr>
     c3c:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <led_board_init>
						run_wave(action_request);
     c40:	80 91 b3 02 	lds	r24, 0x02B3	; 0x8002b3 <action_request>
     c44:	0e 94 69 02 	call	0x4d2	; 0x4d2 <run_wave>
						action_request = OFF_DOWN_UP;
     c48:	84 e0       	ldi	r24, 0x04	; 4
     c4a:	80 93 b3 02 	sts	0x02B3, r24	; 0x8002b3 <action_request>
     c4e:	15 c0       	rjmp	.+42     	; 0xc7a <main+0x19c>
					}
				break;
				default:
					uart_send_string((uint8_t *)"CASE\n\r");
     c50:	89 ee       	ldi	r24, 0xE9	; 233
     c52:	91 e0       	ldi	r25, 0x01	; 1
     c54:	0e 94 38 05 	call	0xa70	; 0xa70 <uart_send_string>
					if(isActive != 0){
     c58:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <isActive>
     c5c:	88 23       	and	r24, r24
     c5e:	69 f0       	breq	.+26     	; 0xc7a <main+0x19c>
						isActive = 0;
     c60:	10 92 b2 02 	sts	0x02B2, r1	; 0x8002b2 <isActive>
						run_wave(action_request);
     c64:	80 91 b3 02 	lds	r24, 0x02B3	; 0x8002b3 <action_request>
     c68:	0e 94 69 02 	call	0x4d2	; 0x4d2 <run_wave>
						set_pin_level(&led_rst, false);
     c6c:	60 e0       	ldi	r22, 0x00	; 0
     c6e:	8a e5       	ldi	r24, 0x5A	; 90
     c70:	91 e0       	ldi	r25, 0x01	; 1
     c72:	0e 94 cb 00 	call	0x196	; 0x196 <set_pin_level>
						action_request = 0;
     c76:	10 92 b3 02 	sts	0x02B3, r1	; 0x8002b3 <action_request>
		}
		
		
		
		
		if (rtc_int_request != 0){
     c7a:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <rtc_int_request>
     c7e:	88 23       	and	r24, r24
     c80:	f1 f1       	breq	.+124    	; 0xcfe <main+0x220>
			rtc_sync(&sys_rtc);
     c82:	8f e4       	ldi	r24, 0x4F	; 79
     c84:	91 e0       	ldi	r25, 0x01	; 1
     c86:	0e 94 64 01 	call	0x2c8	; 0x2c8 <rtc_sync>
			BAT_VOLT = get_mVolt(ADC4_PIN);
     c8a:	84 e0       	ldi	r24, 0x04	; 4
     c8c:	0e 94 b8 00 	call	0x170	; 0x170 <get_mVolt>
     c90:	90 93 b9 02 	sts	0x02B9, r25	; 0x8002b9 <BAT_VOLT+0x1>
     c94:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <BAT_VOLT>
			LIGHT_LEVEL = get_mVolt(ADC5_PIN);			
     c98:	85 e0       	ldi	r24, 0x05	; 5
     c9a:	0e 94 b8 00 	call	0x170	; 0x170 <get_mVolt>
     c9e:	90 93 b7 02 	sts	0x02B7, r25	; 0x8002b7 <LIGHT_LEVEL+0x1>
     ca2:	80 93 b6 02 	sts	0x02B6, r24	; 0x8002b6 <LIGHT_LEVEL>
			//sprintf(char_array, "%02d:%02d:%02d; bat:%umV; l=%u; init: %02X \r\n", sys_rtc.hour, sys_rtc.minute, sys_rtc.second, BAT_VOLT, LIGHT_LEVEL);
			
			sprintf(char_array, "A: %02d; Req: %02d; Timer: %02d;\n\r", isActive, action_request, active_timer);
     ca6:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <active_timer>
     caa:	1f 92       	push	r1
     cac:	8f 93       	push	r24
     cae:	80 91 b3 02 	lds	r24, 0x02B3	; 0x8002b3 <action_request>
     cb2:	1f 92       	push	r1
     cb4:	8f 93       	push	r24
     cb6:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <isActive>
     cba:	1f 92       	push	r1
     cbc:	8f 93       	push	r24
     cbe:	80 ef       	ldi	r24, 0xF0	; 240
     cc0:	91 e0       	ldi	r25, 0x01	; 1
     cc2:	9f 93       	push	r25
     cc4:	8f 93       	push	r24
     cc6:	8e 01       	movw	r16, r28
     cc8:	0f 5f       	subi	r16, 0xFF	; 255
     cca:	1f 4f       	sbci	r17, 0xFF	; 255
     ccc:	1f 93       	push	r17
     cce:	0f 93       	push	r16
     cd0:	0e 94 e7 07 	call	0xfce	; 0xfce <sprintf>
			uart_send_string((uint8_t *)char_array);
     cd4:	c8 01       	movw	r24, r16
     cd6:	0e 94 38 05 	call	0xa70	; 0xa70 <uart_send_string>
			rtc_int_request = 0;
     cda:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <rtc_int_request>
			//run_wave(OFF_DOWN_UP);
			//_delay_ms(1000);
			
			//run_wave(brightness, pwmChannels, 1);
			
			if(active_timer != 0){
     cde:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <active_timer>
     ce2:	0f b6       	in	r0, 0x3f	; 63
     ce4:	f8 94       	cli
     ce6:	de bf       	out	0x3e, r29	; 62
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	cd bf       	out	0x3d, r28	; 61
     cec:	88 23       	and	r24, r24
     cee:	39 f0       	breq	.+14     	; 0xcfe <main+0x220>
				active_timer--;
     cf0:	81 50       	subi	r24, 0x01	; 1
     cf2:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <active_timer>
				uart_send_string((uint8_t *)"countdown");
     cf6:	83 e1       	ldi	r24, 0x13	; 19
     cf8:	92 e0       	ldi	r25, 0x02	; 2
     cfa:	0e 94 38 05 	call	0xa70	; 0xa70 <uart_send_string>
			}
			
		}
		
		sleep_cpu();
     cfe:	88 95       	sleep
		
		
    }
     d00:	50 cf       	rjmp	.-352    	; 0xba2 <main+0xc4>

00000d02 <__fixunssfsi>:
     d02:	0e 94 f5 06 	call	0xdea	; 0xdea <__fp_splitA>
     d06:	88 f0       	brcs	.+34     	; 0xd2a <__fixunssfsi+0x28>
     d08:	9f 57       	subi	r25, 0x7F	; 127
     d0a:	98 f0       	brcs	.+38     	; 0xd32 <__fixunssfsi+0x30>
     d0c:	b9 2f       	mov	r27, r25
     d0e:	99 27       	eor	r25, r25
     d10:	b7 51       	subi	r27, 0x17	; 23
     d12:	b0 f0       	brcs	.+44     	; 0xd40 <__fixunssfsi+0x3e>
     d14:	e1 f0       	breq	.+56     	; 0xd4e <__fixunssfsi+0x4c>
     d16:	66 0f       	add	r22, r22
     d18:	77 1f       	adc	r23, r23
     d1a:	88 1f       	adc	r24, r24
     d1c:	99 1f       	adc	r25, r25
     d1e:	1a f0       	brmi	.+6      	; 0xd26 <__fixunssfsi+0x24>
     d20:	ba 95       	dec	r27
     d22:	c9 f7       	brne	.-14     	; 0xd16 <__fixunssfsi+0x14>
     d24:	14 c0       	rjmp	.+40     	; 0xd4e <__fixunssfsi+0x4c>
     d26:	b1 30       	cpi	r27, 0x01	; 1
     d28:	91 f0       	breq	.+36     	; 0xd4e <__fixunssfsi+0x4c>
     d2a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__fp_zero>
     d2e:	b1 e0       	ldi	r27, 0x01	; 1
     d30:	08 95       	ret
     d32:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_zero>
     d36:	67 2f       	mov	r22, r23
     d38:	78 2f       	mov	r23, r24
     d3a:	88 27       	eor	r24, r24
     d3c:	b8 5f       	subi	r27, 0xF8	; 248
     d3e:	39 f0       	breq	.+14     	; 0xd4e <__fixunssfsi+0x4c>
     d40:	b9 3f       	cpi	r27, 0xF9	; 249
     d42:	cc f3       	brlt	.-14     	; 0xd36 <__fixunssfsi+0x34>
     d44:	86 95       	lsr	r24
     d46:	77 95       	ror	r23
     d48:	67 95       	ror	r22
     d4a:	b3 95       	inc	r27
     d4c:	d9 f7       	brne	.-10     	; 0xd44 <__fixunssfsi+0x42>
     d4e:	3e f4       	brtc	.+14     	; 0xd5e <__fixunssfsi+0x5c>
     d50:	90 95       	com	r25
     d52:	80 95       	com	r24
     d54:	70 95       	com	r23
     d56:	61 95       	neg	r22
     d58:	7f 4f       	sbci	r23, 0xFF	; 255
     d5a:	8f 4f       	sbci	r24, 0xFF	; 255
     d5c:	9f 4f       	sbci	r25, 0xFF	; 255
     d5e:	08 95       	ret

00000d60 <__floatunsisf>:
     d60:	e8 94       	clt
     d62:	09 c0       	rjmp	.+18     	; 0xd76 <__floatsisf+0x12>

00000d64 <__floatsisf>:
     d64:	97 fb       	bst	r25, 7
     d66:	3e f4       	brtc	.+14     	; 0xd76 <__floatsisf+0x12>
     d68:	90 95       	com	r25
     d6a:	80 95       	com	r24
     d6c:	70 95       	com	r23
     d6e:	61 95       	neg	r22
     d70:	7f 4f       	sbci	r23, 0xFF	; 255
     d72:	8f 4f       	sbci	r24, 0xFF	; 255
     d74:	9f 4f       	sbci	r25, 0xFF	; 255
     d76:	99 23       	and	r25, r25
     d78:	a9 f0       	breq	.+42     	; 0xda4 <__floatsisf+0x40>
     d7a:	f9 2f       	mov	r31, r25
     d7c:	96 e9       	ldi	r25, 0x96	; 150
     d7e:	bb 27       	eor	r27, r27
     d80:	93 95       	inc	r25
     d82:	f6 95       	lsr	r31
     d84:	87 95       	ror	r24
     d86:	77 95       	ror	r23
     d88:	67 95       	ror	r22
     d8a:	b7 95       	ror	r27
     d8c:	f1 11       	cpse	r31, r1
     d8e:	f8 cf       	rjmp	.-16     	; 0xd80 <__floatsisf+0x1c>
     d90:	fa f4       	brpl	.+62     	; 0xdd0 <__floatsisf+0x6c>
     d92:	bb 0f       	add	r27, r27
     d94:	11 f4       	brne	.+4      	; 0xd9a <__floatsisf+0x36>
     d96:	60 ff       	sbrs	r22, 0
     d98:	1b c0       	rjmp	.+54     	; 0xdd0 <__floatsisf+0x6c>
     d9a:	6f 5f       	subi	r22, 0xFF	; 255
     d9c:	7f 4f       	sbci	r23, 0xFF	; 255
     d9e:	8f 4f       	sbci	r24, 0xFF	; 255
     da0:	9f 4f       	sbci	r25, 0xFF	; 255
     da2:	16 c0       	rjmp	.+44     	; 0xdd0 <__floatsisf+0x6c>
     da4:	88 23       	and	r24, r24
     da6:	11 f0       	breq	.+4      	; 0xdac <__floatsisf+0x48>
     da8:	96 e9       	ldi	r25, 0x96	; 150
     daa:	11 c0       	rjmp	.+34     	; 0xdce <__floatsisf+0x6a>
     dac:	77 23       	and	r23, r23
     dae:	21 f0       	breq	.+8      	; 0xdb8 <__floatsisf+0x54>
     db0:	9e e8       	ldi	r25, 0x8E	; 142
     db2:	87 2f       	mov	r24, r23
     db4:	76 2f       	mov	r23, r22
     db6:	05 c0       	rjmp	.+10     	; 0xdc2 <__floatsisf+0x5e>
     db8:	66 23       	and	r22, r22
     dba:	71 f0       	breq	.+28     	; 0xdd8 <__floatsisf+0x74>
     dbc:	96 e8       	ldi	r25, 0x86	; 134
     dbe:	86 2f       	mov	r24, r22
     dc0:	70 e0       	ldi	r23, 0x00	; 0
     dc2:	60 e0       	ldi	r22, 0x00	; 0
     dc4:	2a f0       	brmi	.+10     	; 0xdd0 <__floatsisf+0x6c>
     dc6:	9a 95       	dec	r25
     dc8:	66 0f       	add	r22, r22
     dca:	77 1f       	adc	r23, r23
     dcc:	88 1f       	adc	r24, r24
     dce:	da f7       	brpl	.-10     	; 0xdc6 <__floatsisf+0x62>
     dd0:	88 0f       	add	r24, r24
     dd2:	96 95       	lsr	r25
     dd4:	87 95       	ror	r24
     dd6:	97 f9       	bld	r25, 7
     dd8:	08 95       	ret

00000dda <__fp_split3>:
     dda:	57 fd       	sbrc	r21, 7
     ddc:	90 58       	subi	r25, 0x80	; 128
     dde:	44 0f       	add	r20, r20
     de0:	55 1f       	adc	r21, r21
     de2:	59 f0       	breq	.+22     	; 0xdfa <__fp_splitA+0x10>
     de4:	5f 3f       	cpi	r21, 0xFF	; 255
     de6:	71 f0       	breq	.+28     	; 0xe04 <__fp_splitA+0x1a>
     de8:	47 95       	ror	r20

00000dea <__fp_splitA>:
     dea:	88 0f       	add	r24, r24
     dec:	97 fb       	bst	r25, 7
     dee:	99 1f       	adc	r25, r25
     df0:	61 f0       	breq	.+24     	; 0xe0a <__fp_splitA+0x20>
     df2:	9f 3f       	cpi	r25, 0xFF	; 255
     df4:	79 f0       	breq	.+30     	; 0xe14 <__fp_splitA+0x2a>
     df6:	87 95       	ror	r24
     df8:	08 95       	ret
     dfa:	12 16       	cp	r1, r18
     dfc:	13 06       	cpc	r1, r19
     dfe:	14 06       	cpc	r1, r20
     e00:	55 1f       	adc	r21, r21
     e02:	f2 cf       	rjmp	.-28     	; 0xde8 <__fp_split3+0xe>
     e04:	46 95       	lsr	r20
     e06:	f1 df       	rcall	.-30     	; 0xdea <__fp_splitA>
     e08:	08 c0       	rjmp	.+16     	; 0xe1a <__fp_splitA+0x30>
     e0a:	16 16       	cp	r1, r22
     e0c:	17 06       	cpc	r1, r23
     e0e:	18 06       	cpc	r1, r24
     e10:	99 1f       	adc	r25, r25
     e12:	f1 cf       	rjmp	.-30     	; 0xdf6 <__fp_splitA+0xc>
     e14:	86 95       	lsr	r24
     e16:	71 05       	cpc	r23, r1
     e18:	61 05       	cpc	r22, r1
     e1a:	08 94       	sec
     e1c:	08 95       	ret

00000e1e <__fp_zero>:
     e1e:	e8 94       	clt

00000e20 <__fp_szero>:
     e20:	bb 27       	eor	r27, r27
     e22:	66 27       	eor	r22, r22
     e24:	77 27       	eor	r23, r23
     e26:	cb 01       	movw	r24, r22
     e28:	97 f9       	bld	r25, 7
     e2a:	08 95       	ret

00000e2c <__mulsf3>:
     e2c:	0e 94 29 07 	call	0xe52	; 0xe52 <__mulsf3x>
     e30:	0c 94 9a 07 	jmp	0xf34	; 0xf34 <__fp_round>
     e34:	0e 94 8c 07 	call	0xf18	; 0xf18 <__fp_pscA>
     e38:	38 f0       	brcs	.+14     	; 0xe48 <__mulsf3+0x1c>
     e3a:	0e 94 93 07 	call	0xf26	; 0xf26 <__fp_pscB>
     e3e:	20 f0       	brcs	.+8      	; 0xe48 <__mulsf3+0x1c>
     e40:	95 23       	and	r25, r21
     e42:	11 f0       	breq	.+4      	; 0xe48 <__mulsf3+0x1c>
     e44:	0c 94 83 07 	jmp	0xf06	; 0xf06 <__fp_inf>
     e48:	0c 94 89 07 	jmp	0xf12	; 0xf12 <__fp_nan>
     e4c:	11 24       	eor	r1, r1
     e4e:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__fp_szero>

00000e52 <__mulsf3x>:
     e52:	0e 94 ed 06 	call	0xdda	; 0xdda <__fp_split3>
     e56:	70 f3       	brcs	.-36     	; 0xe34 <__mulsf3+0x8>

00000e58 <__mulsf3_pse>:
     e58:	95 9f       	mul	r25, r21
     e5a:	c1 f3       	breq	.-16     	; 0xe4c <__mulsf3+0x20>
     e5c:	95 0f       	add	r25, r21
     e5e:	50 e0       	ldi	r21, 0x00	; 0
     e60:	55 1f       	adc	r21, r21
     e62:	62 9f       	mul	r22, r18
     e64:	f0 01       	movw	r30, r0
     e66:	72 9f       	mul	r23, r18
     e68:	bb 27       	eor	r27, r27
     e6a:	f0 0d       	add	r31, r0
     e6c:	b1 1d       	adc	r27, r1
     e6e:	63 9f       	mul	r22, r19
     e70:	aa 27       	eor	r26, r26
     e72:	f0 0d       	add	r31, r0
     e74:	b1 1d       	adc	r27, r1
     e76:	aa 1f       	adc	r26, r26
     e78:	64 9f       	mul	r22, r20
     e7a:	66 27       	eor	r22, r22
     e7c:	b0 0d       	add	r27, r0
     e7e:	a1 1d       	adc	r26, r1
     e80:	66 1f       	adc	r22, r22
     e82:	82 9f       	mul	r24, r18
     e84:	22 27       	eor	r18, r18
     e86:	b0 0d       	add	r27, r0
     e88:	a1 1d       	adc	r26, r1
     e8a:	62 1f       	adc	r22, r18
     e8c:	73 9f       	mul	r23, r19
     e8e:	b0 0d       	add	r27, r0
     e90:	a1 1d       	adc	r26, r1
     e92:	62 1f       	adc	r22, r18
     e94:	83 9f       	mul	r24, r19
     e96:	a0 0d       	add	r26, r0
     e98:	61 1d       	adc	r22, r1
     e9a:	22 1f       	adc	r18, r18
     e9c:	74 9f       	mul	r23, r20
     e9e:	33 27       	eor	r19, r19
     ea0:	a0 0d       	add	r26, r0
     ea2:	61 1d       	adc	r22, r1
     ea4:	23 1f       	adc	r18, r19
     ea6:	84 9f       	mul	r24, r20
     ea8:	60 0d       	add	r22, r0
     eaa:	21 1d       	adc	r18, r1
     eac:	82 2f       	mov	r24, r18
     eae:	76 2f       	mov	r23, r22
     eb0:	6a 2f       	mov	r22, r26
     eb2:	11 24       	eor	r1, r1
     eb4:	9f 57       	subi	r25, 0x7F	; 127
     eb6:	50 40       	sbci	r21, 0x00	; 0
     eb8:	9a f0       	brmi	.+38     	; 0xee0 <__mulsf3_pse+0x88>
     eba:	f1 f0       	breq	.+60     	; 0xef8 <__mulsf3_pse+0xa0>
     ebc:	88 23       	and	r24, r24
     ebe:	4a f0       	brmi	.+18     	; 0xed2 <__mulsf3_pse+0x7a>
     ec0:	ee 0f       	add	r30, r30
     ec2:	ff 1f       	adc	r31, r31
     ec4:	bb 1f       	adc	r27, r27
     ec6:	66 1f       	adc	r22, r22
     ec8:	77 1f       	adc	r23, r23
     eca:	88 1f       	adc	r24, r24
     ecc:	91 50       	subi	r25, 0x01	; 1
     ece:	50 40       	sbci	r21, 0x00	; 0
     ed0:	a9 f7       	brne	.-22     	; 0xebc <__mulsf3_pse+0x64>
     ed2:	9e 3f       	cpi	r25, 0xFE	; 254
     ed4:	51 05       	cpc	r21, r1
     ed6:	80 f0       	brcs	.+32     	; 0xef8 <__mulsf3_pse+0xa0>
     ed8:	0c 94 83 07 	jmp	0xf06	; 0xf06 <__fp_inf>
     edc:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__fp_szero>
     ee0:	5f 3f       	cpi	r21, 0xFF	; 255
     ee2:	e4 f3       	brlt	.-8      	; 0xedc <__mulsf3_pse+0x84>
     ee4:	98 3e       	cpi	r25, 0xE8	; 232
     ee6:	d4 f3       	brlt	.-12     	; 0xedc <__mulsf3_pse+0x84>
     ee8:	86 95       	lsr	r24
     eea:	77 95       	ror	r23
     eec:	67 95       	ror	r22
     eee:	b7 95       	ror	r27
     ef0:	f7 95       	ror	r31
     ef2:	e7 95       	ror	r30
     ef4:	9f 5f       	subi	r25, 0xFF	; 255
     ef6:	c1 f7       	brne	.-16     	; 0xee8 <__mulsf3_pse+0x90>
     ef8:	fe 2b       	or	r31, r30
     efa:	88 0f       	add	r24, r24
     efc:	91 1d       	adc	r25, r1
     efe:	96 95       	lsr	r25
     f00:	87 95       	ror	r24
     f02:	97 f9       	bld	r25, 7
     f04:	08 95       	ret

00000f06 <__fp_inf>:
     f06:	97 f9       	bld	r25, 7
     f08:	9f 67       	ori	r25, 0x7F	; 127
     f0a:	80 e8       	ldi	r24, 0x80	; 128
     f0c:	70 e0       	ldi	r23, 0x00	; 0
     f0e:	60 e0       	ldi	r22, 0x00	; 0
     f10:	08 95       	ret

00000f12 <__fp_nan>:
     f12:	9f ef       	ldi	r25, 0xFF	; 255
     f14:	80 ec       	ldi	r24, 0xC0	; 192
     f16:	08 95       	ret

00000f18 <__fp_pscA>:
     f18:	00 24       	eor	r0, r0
     f1a:	0a 94       	dec	r0
     f1c:	16 16       	cp	r1, r22
     f1e:	17 06       	cpc	r1, r23
     f20:	18 06       	cpc	r1, r24
     f22:	09 06       	cpc	r0, r25
     f24:	08 95       	ret

00000f26 <__fp_pscB>:
     f26:	00 24       	eor	r0, r0
     f28:	0a 94       	dec	r0
     f2a:	12 16       	cp	r1, r18
     f2c:	13 06       	cpc	r1, r19
     f2e:	14 06       	cpc	r1, r20
     f30:	05 06       	cpc	r0, r21
     f32:	08 95       	ret

00000f34 <__fp_round>:
     f34:	09 2e       	mov	r0, r25
     f36:	03 94       	inc	r0
     f38:	00 0c       	add	r0, r0
     f3a:	11 f4       	brne	.+4      	; 0xf40 <__fp_round+0xc>
     f3c:	88 23       	and	r24, r24
     f3e:	52 f0       	brmi	.+20     	; 0xf54 <__fp_round+0x20>
     f40:	bb 0f       	add	r27, r27
     f42:	40 f4       	brcc	.+16     	; 0xf54 <__fp_round+0x20>
     f44:	bf 2b       	or	r27, r31
     f46:	11 f4       	brne	.+4      	; 0xf4c <__fp_round+0x18>
     f48:	60 ff       	sbrs	r22, 0
     f4a:	04 c0       	rjmp	.+8      	; 0xf54 <__fp_round+0x20>
     f4c:	6f 5f       	subi	r22, 0xFF	; 255
     f4e:	7f 4f       	sbci	r23, 0xFF	; 255
     f50:	8f 4f       	sbci	r24, 0xFF	; 255
     f52:	9f 4f       	sbci	r25, 0xFF	; 255
     f54:	08 95       	ret

00000f56 <__udivmodsi4>:
     f56:	a1 e2       	ldi	r26, 0x21	; 33
     f58:	1a 2e       	mov	r1, r26
     f5a:	aa 1b       	sub	r26, r26
     f5c:	bb 1b       	sub	r27, r27
     f5e:	fd 01       	movw	r30, r26
     f60:	0d c0       	rjmp	.+26     	; 0xf7c <__udivmodsi4_ep>

00000f62 <__udivmodsi4_loop>:
     f62:	aa 1f       	adc	r26, r26
     f64:	bb 1f       	adc	r27, r27
     f66:	ee 1f       	adc	r30, r30
     f68:	ff 1f       	adc	r31, r31
     f6a:	a2 17       	cp	r26, r18
     f6c:	b3 07       	cpc	r27, r19
     f6e:	e4 07       	cpc	r30, r20
     f70:	f5 07       	cpc	r31, r21
     f72:	20 f0       	brcs	.+8      	; 0xf7c <__udivmodsi4_ep>
     f74:	a2 1b       	sub	r26, r18
     f76:	b3 0b       	sbc	r27, r19
     f78:	e4 0b       	sbc	r30, r20
     f7a:	f5 0b       	sbc	r31, r21

00000f7c <__udivmodsi4_ep>:
     f7c:	66 1f       	adc	r22, r22
     f7e:	77 1f       	adc	r23, r23
     f80:	88 1f       	adc	r24, r24
     f82:	99 1f       	adc	r25, r25
     f84:	1a 94       	dec	r1
     f86:	69 f7       	brne	.-38     	; 0xf62 <__udivmodsi4_loop>
     f88:	60 95       	com	r22
     f8a:	70 95       	com	r23
     f8c:	80 95       	com	r24
     f8e:	90 95       	com	r25
     f90:	9b 01       	movw	r18, r22
     f92:	ac 01       	movw	r20, r24
     f94:	bd 01       	movw	r22, r26
     f96:	cf 01       	movw	r24, r30
     f98:	08 95       	ret

00000f9a <__muluhisi3>:
     f9a:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__umulhisi3>
     f9e:	a5 9f       	mul	r26, r21
     fa0:	90 0d       	add	r25, r0
     fa2:	b4 9f       	mul	r27, r20
     fa4:	90 0d       	add	r25, r0
     fa6:	a4 9f       	mul	r26, r20
     fa8:	80 0d       	add	r24, r0
     faa:	91 1d       	adc	r25, r1
     fac:	11 24       	eor	r1, r1
     fae:	08 95       	ret

00000fb0 <__umulhisi3>:
     fb0:	a2 9f       	mul	r26, r18
     fb2:	b0 01       	movw	r22, r0
     fb4:	b3 9f       	mul	r27, r19
     fb6:	c0 01       	movw	r24, r0
     fb8:	a3 9f       	mul	r26, r19
     fba:	70 0d       	add	r23, r0
     fbc:	81 1d       	adc	r24, r1
     fbe:	11 24       	eor	r1, r1
     fc0:	91 1d       	adc	r25, r1
     fc2:	b2 9f       	mul	r27, r18
     fc4:	70 0d       	add	r23, r0
     fc6:	81 1d       	adc	r24, r1
     fc8:	11 24       	eor	r1, r1
     fca:	91 1d       	adc	r25, r1
     fcc:	08 95       	ret

00000fce <sprintf>:
     fce:	ae e0       	ldi	r26, 0x0E	; 14
     fd0:	b0 e0       	ldi	r27, 0x00	; 0
     fd2:	ed ee       	ldi	r30, 0xED	; 237
     fd4:	f7 e0       	ldi	r31, 0x07	; 7
     fd6:	0c 94 a8 0a 	jmp	0x1550	; 0x1550 <__prologue_saves__+0x1c>
     fda:	0d 89       	ldd	r16, Y+21	; 0x15
     fdc:	1e 89       	ldd	r17, Y+22	; 0x16
     fde:	86 e0       	ldi	r24, 0x06	; 6
     fe0:	8c 83       	std	Y+4, r24	; 0x04
     fe2:	1a 83       	std	Y+2, r17	; 0x02
     fe4:	09 83       	std	Y+1, r16	; 0x01
     fe6:	8f ef       	ldi	r24, 0xFF	; 255
     fe8:	9f e7       	ldi	r25, 0x7F	; 127
     fea:	9e 83       	std	Y+6, r25	; 0x06
     fec:	8d 83       	std	Y+5, r24	; 0x05
     fee:	ae 01       	movw	r20, r28
     ff0:	47 5e       	subi	r20, 0xE7	; 231
     ff2:	5f 4f       	sbci	r21, 0xFF	; 255
     ff4:	6f 89       	ldd	r22, Y+23	; 0x17
     ff6:	78 8d       	ldd	r23, Y+24	; 0x18
     ff8:	ce 01       	movw	r24, r28
     ffa:	01 96       	adiw	r24, 0x01	; 1
     ffc:	0e 94 09 08 	call	0x1012	; 0x1012 <vfprintf>
    1000:	ef 81       	ldd	r30, Y+7	; 0x07
    1002:	f8 85       	ldd	r31, Y+8	; 0x08
    1004:	e0 0f       	add	r30, r16
    1006:	f1 1f       	adc	r31, r17
    1008:	10 82       	st	Z, r1
    100a:	2e 96       	adiw	r28, 0x0e	; 14
    100c:	e4 e0       	ldi	r30, 0x04	; 4
    100e:	0c 94 c4 0a 	jmp	0x1588	; 0x1588 <__epilogue_restores__+0x1c>

00001012 <vfprintf>:
    1012:	ab e0       	ldi	r26, 0x0B	; 11
    1014:	b0 e0       	ldi	r27, 0x00	; 0
    1016:	ef e0       	ldi	r30, 0x0F	; 15
    1018:	f8 e0       	ldi	r31, 0x08	; 8
    101a:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__prologue_saves__>
    101e:	6c 01       	movw	r12, r24
    1020:	7b 01       	movw	r14, r22
    1022:	8a 01       	movw	r16, r20
    1024:	fc 01       	movw	r30, r24
    1026:	17 82       	std	Z+7, r1	; 0x07
    1028:	16 82       	std	Z+6, r1	; 0x06
    102a:	83 81       	ldd	r24, Z+3	; 0x03
    102c:	81 ff       	sbrs	r24, 1
    102e:	cc c1       	rjmp	.+920    	; 0x13c8 <vfprintf+0x3b6>
    1030:	ce 01       	movw	r24, r28
    1032:	01 96       	adiw	r24, 0x01	; 1
    1034:	3c 01       	movw	r6, r24
    1036:	f6 01       	movw	r30, r12
    1038:	93 81       	ldd	r25, Z+3	; 0x03
    103a:	f7 01       	movw	r30, r14
    103c:	93 fd       	sbrc	r25, 3
    103e:	85 91       	lpm	r24, Z+
    1040:	93 ff       	sbrs	r25, 3
    1042:	81 91       	ld	r24, Z+
    1044:	7f 01       	movw	r14, r30
    1046:	88 23       	and	r24, r24
    1048:	09 f4       	brne	.+2      	; 0x104c <vfprintf+0x3a>
    104a:	ba c1       	rjmp	.+884    	; 0x13c0 <vfprintf+0x3ae>
    104c:	85 32       	cpi	r24, 0x25	; 37
    104e:	39 f4       	brne	.+14     	; 0x105e <vfprintf+0x4c>
    1050:	93 fd       	sbrc	r25, 3
    1052:	85 91       	lpm	r24, Z+
    1054:	93 ff       	sbrs	r25, 3
    1056:	81 91       	ld	r24, Z+
    1058:	7f 01       	movw	r14, r30
    105a:	85 32       	cpi	r24, 0x25	; 37
    105c:	29 f4       	brne	.+10     	; 0x1068 <vfprintf+0x56>
    105e:	b6 01       	movw	r22, r12
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	0e 94 00 0a 	call	0x1400	; 0x1400 <fputc>
    1066:	e7 cf       	rjmp	.-50     	; 0x1036 <vfprintf+0x24>
    1068:	91 2c       	mov	r9, r1
    106a:	21 2c       	mov	r2, r1
    106c:	31 2c       	mov	r3, r1
    106e:	ff e1       	ldi	r31, 0x1F	; 31
    1070:	f3 15       	cp	r31, r3
    1072:	d8 f0       	brcs	.+54     	; 0x10aa <vfprintf+0x98>
    1074:	8b 32       	cpi	r24, 0x2B	; 43
    1076:	79 f0       	breq	.+30     	; 0x1096 <vfprintf+0x84>
    1078:	38 f4       	brcc	.+14     	; 0x1088 <vfprintf+0x76>
    107a:	80 32       	cpi	r24, 0x20	; 32
    107c:	79 f0       	breq	.+30     	; 0x109c <vfprintf+0x8a>
    107e:	83 32       	cpi	r24, 0x23	; 35
    1080:	a1 f4       	brne	.+40     	; 0x10aa <vfprintf+0x98>
    1082:	23 2d       	mov	r18, r3
    1084:	20 61       	ori	r18, 0x10	; 16
    1086:	1d c0       	rjmp	.+58     	; 0x10c2 <vfprintf+0xb0>
    1088:	8d 32       	cpi	r24, 0x2D	; 45
    108a:	61 f0       	breq	.+24     	; 0x10a4 <vfprintf+0x92>
    108c:	80 33       	cpi	r24, 0x30	; 48
    108e:	69 f4       	brne	.+26     	; 0x10aa <vfprintf+0x98>
    1090:	23 2d       	mov	r18, r3
    1092:	21 60       	ori	r18, 0x01	; 1
    1094:	16 c0       	rjmp	.+44     	; 0x10c2 <vfprintf+0xb0>
    1096:	83 2d       	mov	r24, r3
    1098:	82 60       	ori	r24, 0x02	; 2
    109a:	38 2e       	mov	r3, r24
    109c:	e3 2d       	mov	r30, r3
    109e:	e4 60       	ori	r30, 0x04	; 4
    10a0:	3e 2e       	mov	r3, r30
    10a2:	2a c0       	rjmp	.+84     	; 0x10f8 <vfprintf+0xe6>
    10a4:	f3 2d       	mov	r31, r3
    10a6:	f8 60       	ori	r31, 0x08	; 8
    10a8:	1d c0       	rjmp	.+58     	; 0x10e4 <vfprintf+0xd2>
    10aa:	37 fc       	sbrc	r3, 7
    10ac:	2d c0       	rjmp	.+90     	; 0x1108 <vfprintf+0xf6>
    10ae:	20 ed       	ldi	r18, 0xD0	; 208
    10b0:	28 0f       	add	r18, r24
    10b2:	2a 30       	cpi	r18, 0x0A	; 10
    10b4:	40 f0       	brcs	.+16     	; 0x10c6 <vfprintf+0xb4>
    10b6:	8e 32       	cpi	r24, 0x2E	; 46
    10b8:	b9 f4       	brne	.+46     	; 0x10e8 <vfprintf+0xd6>
    10ba:	36 fc       	sbrc	r3, 6
    10bc:	81 c1       	rjmp	.+770    	; 0x13c0 <vfprintf+0x3ae>
    10be:	23 2d       	mov	r18, r3
    10c0:	20 64       	ori	r18, 0x40	; 64
    10c2:	32 2e       	mov	r3, r18
    10c4:	19 c0       	rjmp	.+50     	; 0x10f8 <vfprintf+0xe6>
    10c6:	36 fe       	sbrs	r3, 6
    10c8:	06 c0       	rjmp	.+12     	; 0x10d6 <vfprintf+0xc4>
    10ca:	8a e0       	ldi	r24, 0x0A	; 10
    10cc:	98 9e       	mul	r9, r24
    10ce:	20 0d       	add	r18, r0
    10d0:	11 24       	eor	r1, r1
    10d2:	92 2e       	mov	r9, r18
    10d4:	11 c0       	rjmp	.+34     	; 0x10f8 <vfprintf+0xe6>
    10d6:	ea e0       	ldi	r30, 0x0A	; 10
    10d8:	2e 9e       	mul	r2, r30
    10da:	20 0d       	add	r18, r0
    10dc:	11 24       	eor	r1, r1
    10de:	22 2e       	mov	r2, r18
    10e0:	f3 2d       	mov	r31, r3
    10e2:	f0 62       	ori	r31, 0x20	; 32
    10e4:	3f 2e       	mov	r3, r31
    10e6:	08 c0       	rjmp	.+16     	; 0x10f8 <vfprintf+0xe6>
    10e8:	8c 36       	cpi	r24, 0x6C	; 108
    10ea:	21 f4       	brne	.+8      	; 0x10f4 <vfprintf+0xe2>
    10ec:	83 2d       	mov	r24, r3
    10ee:	80 68       	ori	r24, 0x80	; 128
    10f0:	38 2e       	mov	r3, r24
    10f2:	02 c0       	rjmp	.+4      	; 0x10f8 <vfprintf+0xe6>
    10f4:	88 36       	cpi	r24, 0x68	; 104
    10f6:	41 f4       	brne	.+16     	; 0x1108 <vfprintf+0xf6>
    10f8:	f7 01       	movw	r30, r14
    10fa:	93 fd       	sbrc	r25, 3
    10fc:	85 91       	lpm	r24, Z+
    10fe:	93 ff       	sbrs	r25, 3
    1100:	81 91       	ld	r24, Z+
    1102:	7f 01       	movw	r14, r30
    1104:	81 11       	cpse	r24, r1
    1106:	b3 cf       	rjmp	.-154    	; 0x106e <vfprintf+0x5c>
    1108:	98 2f       	mov	r25, r24
    110a:	9f 7d       	andi	r25, 0xDF	; 223
    110c:	95 54       	subi	r25, 0x45	; 69
    110e:	93 30       	cpi	r25, 0x03	; 3
    1110:	28 f4       	brcc	.+10     	; 0x111c <vfprintf+0x10a>
    1112:	0c 5f       	subi	r16, 0xFC	; 252
    1114:	1f 4f       	sbci	r17, 0xFF	; 255
    1116:	9f e3       	ldi	r25, 0x3F	; 63
    1118:	99 83       	std	Y+1, r25	; 0x01
    111a:	0d c0       	rjmp	.+26     	; 0x1136 <vfprintf+0x124>
    111c:	83 36       	cpi	r24, 0x63	; 99
    111e:	31 f0       	breq	.+12     	; 0x112c <vfprintf+0x11a>
    1120:	83 37       	cpi	r24, 0x73	; 115
    1122:	71 f0       	breq	.+28     	; 0x1140 <vfprintf+0x12e>
    1124:	83 35       	cpi	r24, 0x53	; 83
    1126:	09 f0       	breq	.+2      	; 0x112a <vfprintf+0x118>
    1128:	59 c0       	rjmp	.+178    	; 0x11dc <vfprintf+0x1ca>
    112a:	21 c0       	rjmp	.+66     	; 0x116e <vfprintf+0x15c>
    112c:	f8 01       	movw	r30, r16
    112e:	80 81       	ld	r24, Z
    1130:	89 83       	std	Y+1, r24	; 0x01
    1132:	0e 5f       	subi	r16, 0xFE	; 254
    1134:	1f 4f       	sbci	r17, 0xFF	; 255
    1136:	88 24       	eor	r8, r8
    1138:	83 94       	inc	r8
    113a:	91 2c       	mov	r9, r1
    113c:	53 01       	movw	r10, r6
    113e:	13 c0       	rjmp	.+38     	; 0x1166 <vfprintf+0x154>
    1140:	28 01       	movw	r4, r16
    1142:	f2 e0       	ldi	r31, 0x02	; 2
    1144:	4f 0e       	add	r4, r31
    1146:	51 1c       	adc	r5, r1
    1148:	f8 01       	movw	r30, r16
    114a:	a0 80       	ld	r10, Z
    114c:	b1 80       	ldd	r11, Z+1	; 0x01
    114e:	36 fe       	sbrs	r3, 6
    1150:	03 c0       	rjmp	.+6      	; 0x1158 <vfprintf+0x146>
    1152:	69 2d       	mov	r22, r9
    1154:	70 e0       	ldi	r23, 0x00	; 0
    1156:	02 c0       	rjmp	.+4      	; 0x115c <vfprintf+0x14a>
    1158:	6f ef       	ldi	r22, 0xFF	; 255
    115a:	7f ef       	ldi	r23, 0xFF	; 255
    115c:	c5 01       	movw	r24, r10
    115e:	0e 94 f5 09 	call	0x13ea	; 0x13ea <strnlen>
    1162:	4c 01       	movw	r8, r24
    1164:	82 01       	movw	r16, r4
    1166:	f3 2d       	mov	r31, r3
    1168:	ff 77       	andi	r31, 0x7F	; 127
    116a:	3f 2e       	mov	r3, r31
    116c:	16 c0       	rjmp	.+44     	; 0x119a <vfprintf+0x188>
    116e:	28 01       	movw	r4, r16
    1170:	22 e0       	ldi	r18, 0x02	; 2
    1172:	42 0e       	add	r4, r18
    1174:	51 1c       	adc	r5, r1
    1176:	f8 01       	movw	r30, r16
    1178:	a0 80       	ld	r10, Z
    117a:	b1 80       	ldd	r11, Z+1	; 0x01
    117c:	36 fe       	sbrs	r3, 6
    117e:	03 c0       	rjmp	.+6      	; 0x1186 <vfprintf+0x174>
    1180:	69 2d       	mov	r22, r9
    1182:	70 e0       	ldi	r23, 0x00	; 0
    1184:	02 c0       	rjmp	.+4      	; 0x118a <vfprintf+0x178>
    1186:	6f ef       	ldi	r22, 0xFF	; 255
    1188:	7f ef       	ldi	r23, 0xFF	; 255
    118a:	c5 01       	movw	r24, r10
    118c:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <strnlen_P>
    1190:	4c 01       	movw	r8, r24
    1192:	f3 2d       	mov	r31, r3
    1194:	f0 68       	ori	r31, 0x80	; 128
    1196:	3f 2e       	mov	r3, r31
    1198:	82 01       	movw	r16, r4
    119a:	33 fc       	sbrc	r3, 3
    119c:	1b c0       	rjmp	.+54     	; 0x11d4 <vfprintf+0x1c2>
    119e:	82 2d       	mov	r24, r2
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	88 16       	cp	r8, r24
    11a4:	99 06       	cpc	r9, r25
    11a6:	b0 f4       	brcc	.+44     	; 0x11d4 <vfprintf+0x1c2>
    11a8:	b6 01       	movw	r22, r12
    11aa:	80 e2       	ldi	r24, 0x20	; 32
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	0e 94 00 0a 	call	0x1400	; 0x1400 <fputc>
    11b2:	2a 94       	dec	r2
    11b4:	f4 cf       	rjmp	.-24     	; 0x119e <vfprintf+0x18c>
    11b6:	f5 01       	movw	r30, r10
    11b8:	37 fc       	sbrc	r3, 7
    11ba:	85 91       	lpm	r24, Z+
    11bc:	37 fe       	sbrs	r3, 7
    11be:	81 91       	ld	r24, Z+
    11c0:	5f 01       	movw	r10, r30
    11c2:	b6 01       	movw	r22, r12
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	0e 94 00 0a 	call	0x1400	; 0x1400 <fputc>
    11ca:	21 10       	cpse	r2, r1
    11cc:	2a 94       	dec	r2
    11ce:	21 e0       	ldi	r18, 0x01	; 1
    11d0:	82 1a       	sub	r8, r18
    11d2:	91 08       	sbc	r9, r1
    11d4:	81 14       	cp	r8, r1
    11d6:	91 04       	cpc	r9, r1
    11d8:	71 f7       	brne	.-36     	; 0x11b6 <vfprintf+0x1a4>
    11da:	e8 c0       	rjmp	.+464    	; 0x13ac <vfprintf+0x39a>
    11dc:	84 36       	cpi	r24, 0x64	; 100
    11de:	11 f0       	breq	.+4      	; 0x11e4 <vfprintf+0x1d2>
    11e0:	89 36       	cpi	r24, 0x69	; 105
    11e2:	41 f5       	brne	.+80     	; 0x1234 <vfprintf+0x222>
    11e4:	f8 01       	movw	r30, r16
    11e6:	37 fe       	sbrs	r3, 7
    11e8:	07 c0       	rjmp	.+14     	; 0x11f8 <vfprintf+0x1e6>
    11ea:	60 81       	ld	r22, Z
    11ec:	71 81       	ldd	r23, Z+1	; 0x01
    11ee:	82 81       	ldd	r24, Z+2	; 0x02
    11f0:	93 81       	ldd	r25, Z+3	; 0x03
    11f2:	0c 5f       	subi	r16, 0xFC	; 252
    11f4:	1f 4f       	sbci	r17, 0xFF	; 255
    11f6:	08 c0       	rjmp	.+16     	; 0x1208 <vfprintf+0x1f6>
    11f8:	60 81       	ld	r22, Z
    11fa:	71 81       	ldd	r23, Z+1	; 0x01
    11fc:	07 2e       	mov	r0, r23
    11fe:	00 0c       	add	r0, r0
    1200:	88 0b       	sbc	r24, r24
    1202:	99 0b       	sbc	r25, r25
    1204:	0e 5f       	subi	r16, 0xFE	; 254
    1206:	1f 4f       	sbci	r17, 0xFF	; 255
    1208:	f3 2d       	mov	r31, r3
    120a:	ff 76       	andi	r31, 0x6F	; 111
    120c:	3f 2e       	mov	r3, r31
    120e:	97 ff       	sbrs	r25, 7
    1210:	09 c0       	rjmp	.+18     	; 0x1224 <vfprintf+0x212>
    1212:	90 95       	com	r25
    1214:	80 95       	com	r24
    1216:	70 95       	com	r23
    1218:	61 95       	neg	r22
    121a:	7f 4f       	sbci	r23, 0xFF	; 255
    121c:	8f 4f       	sbci	r24, 0xFF	; 255
    121e:	9f 4f       	sbci	r25, 0xFF	; 255
    1220:	f0 68       	ori	r31, 0x80	; 128
    1222:	3f 2e       	mov	r3, r31
    1224:	2a e0       	ldi	r18, 0x0A	; 10
    1226:	30 e0       	ldi	r19, 0x00	; 0
    1228:	a3 01       	movw	r20, r6
    122a:	0e 94 3c 0a 	call	0x1478	; 0x1478 <__ultoa_invert>
    122e:	88 2e       	mov	r8, r24
    1230:	86 18       	sub	r8, r6
    1232:	45 c0       	rjmp	.+138    	; 0x12be <vfprintf+0x2ac>
    1234:	85 37       	cpi	r24, 0x75	; 117
    1236:	31 f4       	brne	.+12     	; 0x1244 <vfprintf+0x232>
    1238:	23 2d       	mov	r18, r3
    123a:	2f 7e       	andi	r18, 0xEF	; 239
    123c:	b2 2e       	mov	r11, r18
    123e:	2a e0       	ldi	r18, 0x0A	; 10
    1240:	30 e0       	ldi	r19, 0x00	; 0
    1242:	25 c0       	rjmp	.+74     	; 0x128e <vfprintf+0x27c>
    1244:	93 2d       	mov	r25, r3
    1246:	99 7f       	andi	r25, 0xF9	; 249
    1248:	b9 2e       	mov	r11, r25
    124a:	8f 36       	cpi	r24, 0x6F	; 111
    124c:	c1 f0       	breq	.+48     	; 0x127e <vfprintf+0x26c>
    124e:	18 f4       	brcc	.+6      	; 0x1256 <vfprintf+0x244>
    1250:	88 35       	cpi	r24, 0x58	; 88
    1252:	79 f0       	breq	.+30     	; 0x1272 <vfprintf+0x260>
    1254:	b5 c0       	rjmp	.+362    	; 0x13c0 <vfprintf+0x3ae>
    1256:	80 37       	cpi	r24, 0x70	; 112
    1258:	19 f0       	breq	.+6      	; 0x1260 <vfprintf+0x24e>
    125a:	88 37       	cpi	r24, 0x78	; 120
    125c:	21 f0       	breq	.+8      	; 0x1266 <vfprintf+0x254>
    125e:	b0 c0       	rjmp	.+352    	; 0x13c0 <vfprintf+0x3ae>
    1260:	e9 2f       	mov	r30, r25
    1262:	e0 61       	ori	r30, 0x10	; 16
    1264:	be 2e       	mov	r11, r30
    1266:	b4 fe       	sbrs	r11, 4
    1268:	0d c0       	rjmp	.+26     	; 0x1284 <vfprintf+0x272>
    126a:	fb 2d       	mov	r31, r11
    126c:	f4 60       	ori	r31, 0x04	; 4
    126e:	bf 2e       	mov	r11, r31
    1270:	09 c0       	rjmp	.+18     	; 0x1284 <vfprintf+0x272>
    1272:	34 fe       	sbrs	r3, 4
    1274:	0a c0       	rjmp	.+20     	; 0x128a <vfprintf+0x278>
    1276:	29 2f       	mov	r18, r25
    1278:	26 60       	ori	r18, 0x06	; 6
    127a:	b2 2e       	mov	r11, r18
    127c:	06 c0       	rjmp	.+12     	; 0x128a <vfprintf+0x278>
    127e:	28 e0       	ldi	r18, 0x08	; 8
    1280:	30 e0       	ldi	r19, 0x00	; 0
    1282:	05 c0       	rjmp	.+10     	; 0x128e <vfprintf+0x27c>
    1284:	20 e1       	ldi	r18, 0x10	; 16
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	02 c0       	rjmp	.+4      	; 0x128e <vfprintf+0x27c>
    128a:	20 e1       	ldi	r18, 0x10	; 16
    128c:	32 e0       	ldi	r19, 0x02	; 2
    128e:	f8 01       	movw	r30, r16
    1290:	b7 fe       	sbrs	r11, 7
    1292:	07 c0       	rjmp	.+14     	; 0x12a2 <vfprintf+0x290>
    1294:	60 81       	ld	r22, Z
    1296:	71 81       	ldd	r23, Z+1	; 0x01
    1298:	82 81       	ldd	r24, Z+2	; 0x02
    129a:	93 81       	ldd	r25, Z+3	; 0x03
    129c:	0c 5f       	subi	r16, 0xFC	; 252
    129e:	1f 4f       	sbci	r17, 0xFF	; 255
    12a0:	06 c0       	rjmp	.+12     	; 0x12ae <vfprintf+0x29c>
    12a2:	60 81       	ld	r22, Z
    12a4:	71 81       	ldd	r23, Z+1	; 0x01
    12a6:	80 e0       	ldi	r24, 0x00	; 0
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	0e 5f       	subi	r16, 0xFE	; 254
    12ac:	1f 4f       	sbci	r17, 0xFF	; 255
    12ae:	a3 01       	movw	r20, r6
    12b0:	0e 94 3c 0a 	call	0x1478	; 0x1478 <__ultoa_invert>
    12b4:	88 2e       	mov	r8, r24
    12b6:	86 18       	sub	r8, r6
    12b8:	fb 2d       	mov	r31, r11
    12ba:	ff 77       	andi	r31, 0x7F	; 127
    12bc:	3f 2e       	mov	r3, r31
    12be:	36 fe       	sbrs	r3, 6
    12c0:	0d c0       	rjmp	.+26     	; 0x12dc <vfprintf+0x2ca>
    12c2:	23 2d       	mov	r18, r3
    12c4:	2e 7f       	andi	r18, 0xFE	; 254
    12c6:	a2 2e       	mov	r10, r18
    12c8:	89 14       	cp	r8, r9
    12ca:	58 f4       	brcc	.+22     	; 0x12e2 <vfprintf+0x2d0>
    12cc:	34 fe       	sbrs	r3, 4
    12ce:	0b c0       	rjmp	.+22     	; 0x12e6 <vfprintf+0x2d4>
    12d0:	32 fc       	sbrc	r3, 2
    12d2:	09 c0       	rjmp	.+18     	; 0x12e6 <vfprintf+0x2d4>
    12d4:	83 2d       	mov	r24, r3
    12d6:	8e 7e       	andi	r24, 0xEE	; 238
    12d8:	a8 2e       	mov	r10, r24
    12da:	05 c0       	rjmp	.+10     	; 0x12e6 <vfprintf+0x2d4>
    12dc:	b8 2c       	mov	r11, r8
    12de:	a3 2c       	mov	r10, r3
    12e0:	03 c0       	rjmp	.+6      	; 0x12e8 <vfprintf+0x2d6>
    12e2:	b8 2c       	mov	r11, r8
    12e4:	01 c0       	rjmp	.+2      	; 0x12e8 <vfprintf+0x2d6>
    12e6:	b9 2c       	mov	r11, r9
    12e8:	a4 fe       	sbrs	r10, 4
    12ea:	0f c0       	rjmp	.+30     	; 0x130a <vfprintf+0x2f8>
    12ec:	fe 01       	movw	r30, r28
    12ee:	e8 0d       	add	r30, r8
    12f0:	f1 1d       	adc	r31, r1
    12f2:	80 81       	ld	r24, Z
    12f4:	80 33       	cpi	r24, 0x30	; 48
    12f6:	21 f4       	brne	.+8      	; 0x1300 <vfprintf+0x2ee>
    12f8:	9a 2d       	mov	r25, r10
    12fa:	99 7e       	andi	r25, 0xE9	; 233
    12fc:	a9 2e       	mov	r10, r25
    12fe:	09 c0       	rjmp	.+18     	; 0x1312 <vfprintf+0x300>
    1300:	a2 fe       	sbrs	r10, 2
    1302:	06 c0       	rjmp	.+12     	; 0x1310 <vfprintf+0x2fe>
    1304:	b3 94       	inc	r11
    1306:	b3 94       	inc	r11
    1308:	04 c0       	rjmp	.+8      	; 0x1312 <vfprintf+0x300>
    130a:	8a 2d       	mov	r24, r10
    130c:	86 78       	andi	r24, 0x86	; 134
    130e:	09 f0       	breq	.+2      	; 0x1312 <vfprintf+0x300>
    1310:	b3 94       	inc	r11
    1312:	a3 fc       	sbrc	r10, 3
    1314:	11 c0       	rjmp	.+34     	; 0x1338 <vfprintf+0x326>
    1316:	a0 fe       	sbrs	r10, 0
    1318:	06 c0       	rjmp	.+12     	; 0x1326 <vfprintf+0x314>
    131a:	b2 14       	cp	r11, r2
    131c:	88 f4       	brcc	.+34     	; 0x1340 <vfprintf+0x32e>
    131e:	28 0c       	add	r2, r8
    1320:	92 2c       	mov	r9, r2
    1322:	9b 18       	sub	r9, r11
    1324:	0e c0       	rjmp	.+28     	; 0x1342 <vfprintf+0x330>
    1326:	b2 14       	cp	r11, r2
    1328:	60 f4       	brcc	.+24     	; 0x1342 <vfprintf+0x330>
    132a:	b6 01       	movw	r22, r12
    132c:	80 e2       	ldi	r24, 0x20	; 32
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	0e 94 00 0a 	call	0x1400	; 0x1400 <fputc>
    1334:	b3 94       	inc	r11
    1336:	f7 cf       	rjmp	.-18     	; 0x1326 <vfprintf+0x314>
    1338:	b2 14       	cp	r11, r2
    133a:	18 f4       	brcc	.+6      	; 0x1342 <vfprintf+0x330>
    133c:	2b 18       	sub	r2, r11
    133e:	02 c0       	rjmp	.+4      	; 0x1344 <vfprintf+0x332>
    1340:	98 2c       	mov	r9, r8
    1342:	21 2c       	mov	r2, r1
    1344:	a4 fe       	sbrs	r10, 4
    1346:	10 c0       	rjmp	.+32     	; 0x1368 <vfprintf+0x356>
    1348:	b6 01       	movw	r22, r12
    134a:	80 e3       	ldi	r24, 0x30	; 48
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	0e 94 00 0a 	call	0x1400	; 0x1400 <fputc>
    1352:	a2 fe       	sbrs	r10, 2
    1354:	17 c0       	rjmp	.+46     	; 0x1384 <vfprintf+0x372>
    1356:	a1 fc       	sbrc	r10, 1
    1358:	03 c0       	rjmp	.+6      	; 0x1360 <vfprintf+0x34e>
    135a:	88 e7       	ldi	r24, 0x78	; 120
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	02 c0       	rjmp	.+4      	; 0x1364 <vfprintf+0x352>
    1360:	88 e5       	ldi	r24, 0x58	; 88
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	b6 01       	movw	r22, r12
    1366:	0c c0       	rjmp	.+24     	; 0x1380 <vfprintf+0x36e>
    1368:	8a 2d       	mov	r24, r10
    136a:	86 78       	andi	r24, 0x86	; 134
    136c:	59 f0       	breq	.+22     	; 0x1384 <vfprintf+0x372>
    136e:	a1 fe       	sbrs	r10, 1
    1370:	02 c0       	rjmp	.+4      	; 0x1376 <vfprintf+0x364>
    1372:	8b e2       	ldi	r24, 0x2B	; 43
    1374:	01 c0       	rjmp	.+2      	; 0x1378 <vfprintf+0x366>
    1376:	80 e2       	ldi	r24, 0x20	; 32
    1378:	a7 fc       	sbrc	r10, 7
    137a:	8d e2       	ldi	r24, 0x2D	; 45
    137c:	b6 01       	movw	r22, r12
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	0e 94 00 0a 	call	0x1400	; 0x1400 <fputc>
    1384:	89 14       	cp	r8, r9
    1386:	38 f4       	brcc	.+14     	; 0x1396 <vfprintf+0x384>
    1388:	b6 01       	movw	r22, r12
    138a:	80 e3       	ldi	r24, 0x30	; 48
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	0e 94 00 0a 	call	0x1400	; 0x1400 <fputc>
    1392:	9a 94       	dec	r9
    1394:	f7 cf       	rjmp	.-18     	; 0x1384 <vfprintf+0x372>
    1396:	8a 94       	dec	r8
    1398:	f3 01       	movw	r30, r6
    139a:	e8 0d       	add	r30, r8
    139c:	f1 1d       	adc	r31, r1
    139e:	80 81       	ld	r24, Z
    13a0:	b6 01       	movw	r22, r12
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	0e 94 00 0a 	call	0x1400	; 0x1400 <fputc>
    13a8:	81 10       	cpse	r8, r1
    13aa:	f5 cf       	rjmp	.-22     	; 0x1396 <vfprintf+0x384>
    13ac:	22 20       	and	r2, r2
    13ae:	09 f4       	brne	.+2      	; 0x13b2 <vfprintf+0x3a0>
    13b0:	42 ce       	rjmp	.-892    	; 0x1036 <vfprintf+0x24>
    13b2:	b6 01       	movw	r22, r12
    13b4:	80 e2       	ldi	r24, 0x20	; 32
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	0e 94 00 0a 	call	0x1400	; 0x1400 <fputc>
    13bc:	2a 94       	dec	r2
    13be:	f6 cf       	rjmp	.-20     	; 0x13ac <vfprintf+0x39a>
    13c0:	f6 01       	movw	r30, r12
    13c2:	86 81       	ldd	r24, Z+6	; 0x06
    13c4:	97 81       	ldd	r25, Z+7	; 0x07
    13c6:	02 c0       	rjmp	.+4      	; 0x13cc <vfprintf+0x3ba>
    13c8:	8f ef       	ldi	r24, 0xFF	; 255
    13ca:	9f ef       	ldi	r25, 0xFF	; 255
    13cc:	2b 96       	adiw	r28, 0x0b	; 11
    13ce:	e2 e1       	ldi	r30, 0x12	; 18
    13d0:	0c 94 b6 0a 	jmp	0x156c	; 0x156c <__epilogue_restores__>

000013d4 <strnlen_P>:
    13d4:	fc 01       	movw	r30, r24
    13d6:	05 90       	lpm	r0, Z+
    13d8:	61 50       	subi	r22, 0x01	; 1
    13da:	70 40       	sbci	r23, 0x00	; 0
    13dc:	01 10       	cpse	r0, r1
    13de:	d8 f7       	brcc	.-10     	; 0x13d6 <strnlen_P+0x2>
    13e0:	80 95       	com	r24
    13e2:	90 95       	com	r25
    13e4:	8e 0f       	add	r24, r30
    13e6:	9f 1f       	adc	r25, r31
    13e8:	08 95       	ret

000013ea <strnlen>:
    13ea:	fc 01       	movw	r30, r24
    13ec:	61 50       	subi	r22, 0x01	; 1
    13ee:	70 40       	sbci	r23, 0x00	; 0
    13f0:	01 90       	ld	r0, Z+
    13f2:	01 10       	cpse	r0, r1
    13f4:	d8 f7       	brcc	.-10     	; 0x13ec <strnlen+0x2>
    13f6:	80 95       	com	r24
    13f8:	90 95       	com	r25
    13fa:	8e 0f       	add	r24, r30
    13fc:	9f 1f       	adc	r25, r31
    13fe:	08 95       	ret

00001400 <fputc>:
    1400:	0f 93       	push	r16
    1402:	1f 93       	push	r17
    1404:	cf 93       	push	r28
    1406:	df 93       	push	r29
    1408:	fb 01       	movw	r30, r22
    140a:	23 81       	ldd	r18, Z+3	; 0x03
    140c:	21 fd       	sbrc	r18, 1
    140e:	03 c0       	rjmp	.+6      	; 0x1416 <fputc+0x16>
    1410:	8f ef       	ldi	r24, 0xFF	; 255
    1412:	9f ef       	ldi	r25, 0xFF	; 255
    1414:	2c c0       	rjmp	.+88     	; 0x146e <fputc+0x6e>
    1416:	22 ff       	sbrs	r18, 2
    1418:	16 c0       	rjmp	.+44     	; 0x1446 <fputc+0x46>
    141a:	46 81       	ldd	r20, Z+6	; 0x06
    141c:	57 81       	ldd	r21, Z+7	; 0x07
    141e:	24 81       	ldd	r18, Z+4	; 0x04
    1420:	35 81       	ldd	r19, Z+5	; 0x05
    1422:	42 17       	cp	r20, r18
    1424:	53 07       	cpc	r21, r19
    1426:	44 f4       	brge	.+16     	; 0x1438 <fputc+0x38>
    1428:	a0 81       	ld	r26, Z
    142a:	b1 81       	ldd	r27, Z+1	; 0x01
    142c:	9d 01       	movw	r18, r26
    142e:	2f 5f       	subi	r18, 0xFF	; 255
    1430:	3f 4f       	sbci	r19, 0xFF	; 255
    1432:	31 83       	std	Z+1, r19	; 0x01
    1434:	20 83       	st	Z, r18
    1436:	8c 93       	st	X, r24
    1438:	26 81       	ldd	r18, Z+6	; 0x06
    143a:	37 81       	ldd	r19, Z+7	; 0x07
    143c:	2f 5f       	subi	r18, 0xFF	; 255
    143e:	3f 4f       	sbci	r19, 0xFF	; 255
    1440:	37 83       	std	Z+7, r19	; 0x07
    1442:	26 83       	std	Z+6, r18	; 0x06
    1444:	14 c0       	rjmp	.+40     	; 0x146e <fputc+0x6e>
    1446:	8b 01       	movw	r16, r22
    1448:	ec 01       	movw	r28, r24
    144a:	fb 01       	movw	r30, r22
    144c:	00 84       	ldd	r0, Z+8	; 0x08
    144e:	f1 85       	ldd	r31, Z+9	; 0x09
    1450:	e0 2d       	mov	r30, r0
    1452:	09 95       	icall
    1454:	89 2b       	or	r24, r25
    1456:	e1 f6       	brne	.-72     	; 0x1410 <fputc+0x10>
    1458:	d8 01       	movw	r26, r16
    145a:	16 96       	adiw	r26, 0x06	; 6
    145c:	8d 91       	ld	r24, X+
    145e:	9c 91       	ld	r25, X
    1460:	17 97       	sbiw	r26, 0x07	; 7
    1462:	01 96       	adiw	r24, 0x01	; 1
    1464:	17 96       	adiw	r26, 0x07	; 7
    1466:	9c 93       	st	X, r25
    1468:	8e 93       	st	-X, r24
    146a:	16 97       	sbiw	r26, 0x06	; 6
    146c:	ce 01       	movw	r24, r28
    146e:	df 91       	pop	r29
    1470:	cf 91       	pop	r28
    1472:	1f 91       	pop	r17
    1474:	0f 91       	pop	r16
    1476:	08 95       	ret

00001478 <__ultoa_invert>:
    1478:	fa 01       	movw	r30, r20
    147a:	aa 27       	eor	r26, r26
    147c:	28 30       	cpi	r18, 0x08	; 8
    147e:	51 f1       	breq	.+84     	; 0x14d4 <__ultoa_invert+0x5c>
    1480:	20 31       	cpi	r18, 0x10	; 16
    1482:	81 f1       	breq	.+96     	; 0x14e4 <__ultoa_invert+0x6c>
    1484:	e8 94       	clt
    1486:	6f 93       	push	r22
    1488:	6e 7f       	andi	r22, 0xFE	; 254
    148a:	6e 5f       	subi	r22, 0xFE	; 254
    148c:	7f 4f       	sbci	r23, 0xFF	; 255
    148e:	8f 4f       	sbci	r24, 0xFF	; 255
    1490:	9f 4f       	sbci	r25, 0xFF	; 255
    1492:	af 4f       	sbci	r26, 0xFF	; 255
    1494:	b1 e0       	ldi	r27, 0x01	; 1
    1496:	3e d0       	rcall	.+124    	; 0x1514 <__ultoa_invert+0x9c>
    1498:	b4 e0       	ldi	r27, 0x04	; 4
    149a:	3c d0       	rcall	.+120    	; 0x1514 <__ultoa_invert+0x9c>
    149c:	67 0f       	add	r22, r23
    149e:	78 1f       	adc	r23, r24
    14a0:	89 1f       	adc	r24, r25
    14a2:	9a 1f       	adc	r25, r26
    14a4:	a1 1d       	adc	r26, r1
    14a6:	68 0f       	add	r22, r24
    14a8:	79 1f       	adc	r23, r25
    14aa:	8a 1f       	adc	r24, r26
    14ac:	91 1d       	adc	r25, r1
    14ae:	a1 1d       	adc	r26, r1
    14b0:	6a 0f       	add	r22, r26
    14b2:	71 1d       	adc	r23, r1
    14b4:	81 1d       	adc	r24, r1
    14b6:	91 1d       	adc	r25, r1
    14b8:	a1 1d       	adc	r26, r1
    14ba:	20 d0       	rcall	.+64     	; 0x14fc <__ultoa_invert+0x84>
    14bc:	09 f4       	brne	.+2      	; 0x14c0 <__ultoa_invert+0x48>
    14be:	68 94       	set
    14c0:	3f 91       	pop	r19
    14c2:	2a e0       	ldi	r18, 0x0A	; 10
    14c4:	26 9f       	mul	r18, r22
    14c6:	11 24       	eor	r1, r1
    14c8:	30 19       	sub	r19, r0
    14ca:	30 5d       	subi	r19, 0xD0	; 208
    14cc:	31 93       	st	Z+, r19
    14ce:	de f6       	brtc	.-74     	; 0x1486 <__ultoa_invert+0xe>
    14d0:	cf 01       	movw	r24, r30
    14d2:	08 95       	ret
    14d4:	46 2f       	mov	r20, r22
    14d6:	47 70       	andi	r20, 0x07	; 7
    14d8:	40 5d       	subi	r20, 0xD0	; 208
    14da:	41 93       	st	Z+, r20
    14dc:	b3 e0       	ldi	r27, 0x03	; 3
    14de:	0f d0       	rcall	.+30     	; 0x14fe <__ultoa_invert+0x86>
    14e0:	c9 f7       	brne	.-14     	; 0x14d4 <__ultoa_invert+0x5c>
    14e2:	f6 cf       	rjmp	.-20     	; 0x14d0 <__ultoa_invert+0x58>
    14e4:	46 2f       	mov	r20, r22
    14e6:	4f 70       	andi	r20, 0x0F	; 15
    14e8:	40 5d       	subi	r20, 0xD0	; 208
    14ea:	4a 33       	cpi	r20, 0x3A	; 58
    14ec:	18 f0       	brcs	.+6      	; 0x14f4 <__ultoa_invert+0x7c>
    14ee:	49 5d       	subi	r20, 0xD9	; 217
    14f0:	31 fd       	sbrc	r19, 1
    14f2:	40 52       	subi	r20, 0x20	; 32
    14f4:	41 93       	st	Z+, r20
    14f6:	02 d0       	rcall	.+4      	; 0x14fc <__ultoa_invert+0x84>
    14f8:	a9 f7       	brne	.-22     	; 0x14e4 <__ultoa_invert+0x6c>
    14fa:	ea cf       	rjmp	.-44     	; 0x14d0 <__ultoa_invert+0x58>
    14fc:	b4 e0       	ldi	r27, 0x04	; 4
    14fe:	a6 95       	lsr	r26
    1500:	97 95       	ror	r25
    1502:	87 95       	ror	r24
    1504:	77 95       	ror	r23
    1506:	67 95       	ror	r22
    1508:	ba 95       	dec	r27
    150a:	c9 f7       	brne	.-14     	; 0x14fe <__ultoa_invert+0x86>
    150c:	00 97       	sbiw	r24, 0x00	; 0
    150e:	61 05       	cpc	r22, r1
    1510:	71 05       	cpc	r23, r1
    1512:	08 95       	ret
    1514:	9b 01       	movw	r18, r22
    1516:	ac 01       	movw	r20, r24
    1518:	0a 2e       	mov	r0, r26
    151a:	06 94       	lsr	r0
    151c:	57 95       	ror	r21
    151e:	47 95       	ror	r20
    1520:	37 95       	ror	r19
    1522:	27 95       	ror	r18
    1524:	ba 95       	dec	r27
    1526:	c9 f7       	brne	.-14     	; 0x151a <__ultoa_invert+0xa2>
    1528:	62 0f       	add	r22, r18
    152a:	73 1f       	adc	r23, r19
    152c:	84 1f       	adc	r24, r20
    152e:	95 1f       	adc	r25, r21
    1530:	a0 1d       	adc	r26, r0
    1532:	08 95       	ret

00001534 <__prologue_saves__>:
    1534:	2f 92       	push	r2
    1536:	3f 92       	push	r3
    1538:	4f 92       	push	r4
    153a:	5f 92       	push	r5
    153c:	6f 92       	push	r6
    153e:	7f 92       	push	r7
    1540:	8f 92       	push	r8
    1542:	9f 92       	push	r9
    1544:	af 92       	push	r10
    1546:	bf 92       	push	r11
    1548:	cf 92       	push	r12
    154a:	df 92       	push	r13
    154c:	ef 92       	push	r14
    154e:	ff 92       	push	r15
    1550:	0f 93       	push	r16
    1552:	1f 93       	push	r17
    1554:	cf 93       	push	r28
    1556:	df 93       	push	r29
    1558:	cd b7       	in	r28, 0x3d	; 61
    155a:	de b7       	in	r29, 0x3e	; 62
    155c:	ca 1b       	sub	r28, r26
    155e:	db 0b       	sbc	r29, r27
    1560:	0f b6       	in	r0, 0x3f	; 63
    1562:	f8 94       	cli
    1564:	de bf       	out	0x3e, r29	; 62
    1566:	0f be       	out	0x3f, r0	; 63
    1568:	cd bf       	out	0x3d, r28	; 61
    156a:	09 94       	ijmp

0000156c <__epilogue_restores__>:
    156c:	2a 88       	ldd	r2, Y+18	; 0x12
    156e:	39 88       	ldd	r3, Y+17	; 0x11
    1570:	48 88       	ldd	r4, Y+16	; 0x10
    1572:	5f 84       	ldd	r5, Y+15	; 0x0f
    1574:	6e 84       	ldd	r6, Y+14	; 0x0e
    1576:	7d 84       	ldd	r7, Y+13	; 0x0d
    1578:	8c 84       	ldd	r8, Y+12	; 0x0c
    157a:	9b 84       	ldd	r9, Y+11	; 0x0b
    157c:	aa 84       	ldd	r10, Y+10	; 0x0a
    157e:	b9 84       	ldd	r11, Y+9	; 0x09
    1580:	c8 84       	ldd	r12, Y+8	; 0x08
    1582:	df 80       	ldd	r13, Y+7	; 0x07
    1584:	ee 80       	ldd	r14, Y+6	; 0x06
    1586:	fd 80       	ldd	r15, Y+5	; 0x05
    1588:	0c 81       	ldd	r16, Y+4	; 0x04
    158a:	1b 81       	ldd	r17, Y+3	; 0x03
    158c:	aa 81       	ldd	r26, Y+2	; 0x02
    158e:	b9 81       	ldd	r27, Y+1	; 0x01
    1590:	ce 0f       	add	r28, r30
    1592:	d1 1d       	adc	r29, r1
    1594:	0f b6       	in	r0, 0x3f	; 63
    1596:	f8 94       	cli
    1598:	de bf       	out	0x3e, r29	; 62
    159a:	0f be       	out	0x3f, r0	; 63
    159c:	cd bf       	out	0x3d, r28	; 61
    159e:	ed 01       	movw	r28, r26
    15a0:	08 95       	ret

000015a2 <_exit>:
    15a2:	f8 94       	cli

000015a4 <__stop_program>:
    15a4:	ff cf       	rjmp	.-2      	; 0x15a4 <__stop_program>
